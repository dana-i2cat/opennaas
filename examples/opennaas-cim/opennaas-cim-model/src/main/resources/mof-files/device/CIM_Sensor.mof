// Copyright (c) 2007 DMTF.  All rights reserved.
// <change cr="SysDevCR00718.001" type ="add">Make concrete</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// <change cr="CIMCoreCR00881" type="add">Add enumerations
// to SensorType for "Power Consumption" and "Power Production" 
// as well as the reserved enumerations that were missing.</change>
// <change cr="ArchCR00089.003" type="add">Add PUnit qualifier values
// to Units qualifier values.</change>
// <change cr="CIMCoreCR00909" type="add">change description.</change>
// <change cr="CIMCoreCR00942" type="add">add Pressure to SensorType </change>
// ==================================================================
//  CIM_Sensor
// ==================================================================
   [Version ( "2.16.0" ), 
    UMLPackagePath ( "CIM::Device::Sensors" ), 
    Description ( 
       "A Sensor is an entity capable of measuring or reporting the "
       "characteristics of some physical property - for example, the "
       "temperature or voltage characteristics of a Computer System." )]
class CIM_Sensor : CIM_LogicalDevice {

      [Description ( 
          "The Type of the Sensor, e.g. Voltage or Temperature "
          "Sensor. If the type is set to \"Other\", then the "
          "OtherSensorType Description can be used to further "
          "identify the type, or if the Sensor has numeric "
          "readings, then the type of the Sensor can be implicitly "
          "determined by the Units. A description of the different "
          "Sensor types is as follows: A Temperature Sensor "
          "measures the environmental temperature. Voltage and "
          "Current Sensors measure electrical voltage and current "
          "readings. A Tachometer measures speed/revolutions of a "
          "Device. For example, a Fan Device can have an associated "
          "Tachometer which measures its speed. A Counter is a "
          "general purpose Sensor that measures some numerical "
          "property of a Device. A Counter value can be cleared, "
          "but it never decreases. A Switch Sensor has states like "
          "Open/Close, On/Off, or Up/Down. A Lock has states of "
          "Locked/Unlocked. Humidity, Smoke Detection and Air Flow "
          "Sensors measure the equivalent environmental "
          "characteristics. A Presence Sensor detects the presence "
          "of a PhysicalElement. A Power Consumption Sensor "
          "measures the instantaneous power consumed by a managed "
          "element. A Power Production Sensor measures the "
          "instantaneous power produced by a managed element such "
          "as a power supply or a voltage regulator. A pressure "
          "sensor is used to report pressure." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11", "12", "13", "14", "15", "..", "32768..65535" }, 
       Values { "Unknown", "Other", "Temperature", "Voltage", 
          "Current", "Tachometer", "Counter", "Switch", "Lock", 
          "Humidity", "Smoke Detection", "Presence", "Air Flow", 
          "Power Consumption", "Power Production", "Pressure", 
          "DMTF Reserved", "Vendor Reserved" }, 
       ModelCorrespondence { "CIM_Sensor.OtherSensorTypeDescription" }]
   uint16 SensorType;

      [Description ( 
          "A string describing the Sensor type - used when the "
          "SensorType property is set to \"Other\"." ), 
       MaxLen ( 128 ), 
       ModelCorrespondence { "CIM_Sensor.SensorType" }]
   string OtherSensorTypeDescription;

      [Description ( 
          "PossibleStates enumerates the string outputs of the "
          "Sensor. For example, a \"Switch\" Sensor may output the "
          "states \"On\", or \"Off\". Another implementation of the "
          "Switch may output the states \"Open\", and \"Close\". "
          "Another example is a NumericSensor supporting "
          "thresholds. This Sensor can report the states like "
          "\"Normal\", \"Upper Fatal\", \"Lower Non-Critical\", "
          "etc. A NumericSensor that does not publish readings and "
          "thresholds, but stores this data internally, can still "
          "report its states." ), 
       MaxLen ( 128 )]
   string PossibleStates[];

      [Description ( 
          "The current state indicated by the Sensor. This is "
          "always one of the \"PossibleStates\"." ), 
       MaxLen ( 128 )]
   string CurrentState;

      [Description ( 
          "The polling interval that the Sensor hardware or the "
          "instrumentation uses to determine the current state of "
          "the Sensor." ), 
       Units ( "NanoSeconds" ), 
       PUnit ( "second * 10^-9" )]
   uint64 PollingInterval;


};
