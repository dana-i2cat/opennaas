/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Wed Jan 12
 * 09:21:06 CET 2011.
 */

package org.opennaas.extensions.router.model;

import java.io.*;

/**
 * This Class contains accessor and mutator methods for all properties defined in the CIM class FilterListInSystem as well as methods comparable to
 * the invokeMethods defined for this class. This Class implements the FilterListInSystemBean Interface. The CIM class FilterListInSystem is described
 * as follows:
 * 
 * FilterLists are defined in the context of a ComputerSystem (e.g., a router, firewall or host). Note that this class is deprecated since its
 * subclassing is not correct. It subclasses from SystemComponent, but a FilterList is NOT a Component of a System. Instead, it is hosted/scoped by
 * the System. In versions up to CIM 2.6, FilterListInSystem was a mandatory, Weak relationship. This is no longer true, beginning with CIM V2.7.
 */
@Deprecated
public class FilterListInSystem extends SystemComponent implements
		Serializable {

	/**
	 * This constructor creates a FilterListInSystemBeanImpl Class which implements the FilterListInSystemBean Interface, and encapsulates the CIM
	 * class FilterListInSystem in a Java Bean. The CIM class FilterListInSystem is described as follows:
	 * 
	 * FilterLists are defined in the context of a ComputerSystem (e.g., a router, firewall or host). Note that this class is deprecated since its
	 * subclassing is not correct. It subclasses from SystemComponent, but a FilterList is NOT a Component of a System. Instead, it is hosted/scoped
	 * by the System. In versions up to CIM 2.6, FilterListInSystem was a mandatory, Weak relationship. This is no longer true, beginning with CIM
	 * V2.7.
	 */
	public FilterListInSystem() {
	};

	/**
	 * This method create an Association of the type FilterListInSystem between one ComputerSystem object and FilterList object
	 */
	@Deprecated
	public static FilterListInSystem link(ComputerSystem
			groupComponent, FilterList partComponent) {

		return (FilterListInSystem) Association.link(FilterListInSystem.class, groupComponent, partComponent);
	}// link

} // Class FilterListInSystem
