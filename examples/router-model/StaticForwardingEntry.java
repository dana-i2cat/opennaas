/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Wed Jan 12
 * 09:21:06 CET 2011.
 */

package org.opennaas.extensions.router.model;

import java.io.*;
import java.lang.Exception;

/**
 * This Class contains accessor and mutator methods for all properties defined in the CIM class StaticForwardingEntry as well as methods comparable to
 * the invokeMethods defined for this class. This Class implements the StaticForwardingEntryBean Interface. The CIM class StaticForwardingEntry is
 * described as follows:
 * 
 * A StaticForwardingEntry represents an entry in the static (destination-address filtering) database associated with the TransparentBridgingService.
 * The entry is Weak to the Service as specified by TransparentBridgingStatic Forwarding.
 */
public class StaticForwardingEntry extends LogicalElement implements
		Serializable {

	/**
	 * This constructor creates a StaticForwardingEntryBeanImpl Class which implements the StaticForwardingEntryBean Interface, and encapsulates the
	 * CIM class StaticForwardingEntry in a Java Bean. The CIM class StaticForwardingEntry is described as follows:
	 * 
	 * A StaticForwardingEntry represents an entry in the static (destination-address filtering) database associated with the
	 * TransparentBridgingService. The entry is Weak to the Service as specified by TransparentBridgingStatic Forwarding.
	 */
	public StaticForwardingEntry() {
	};

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property systemCreationClassName.
	 */
	private String	systemCreationClassName;

	/**
	 * This method returns the StaticForwardingEntry.systemCreationClassName property value. This property is described as follows:
	 * 
	 * The scoping System's CreationClassName.
	 * 
	 * @return String current systemCreationClassName property value
	 * @exception Exception
	 */
	public String getSystemCreationClassName() {

		return this.systemCreationClassName;
	} // getSystemCreationClassName

	/**
	 * This method sets the StaticForwardingEntry.systemCreationClassName property value. This property is described as follows:
	 * 
	 * The scoping System's CreationClassName.
	 * 
	 * @param String
	 *            new systemCreationClassName property value
	 * @exception Exception
	 */
	public void setSystemCreationClassName(String systemCreationClassName) {

		this.systemCreationClassName = systemCreationClassName;
	} // setSystemCreationClassName

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property systemName.
	 */
	private String	systemName;

	/**
	 * This method returns the StaticForwardingEntry.systemName property value. This property is described as follows:
	 * 
	 * The scoping System's Name.
	 * 
	 * @return String current systemName property value
	 * @exception Exception
	 */
	public String getSystemName() {

		return this.systemName;
	} // getSystemName

	/**
	 * This method sets the StaticForwardingEntry.systemName property value. This property is described as follows:
	 * 
	 * The scoping System's Name.
	 * 
	 * @param String
	 *            new systemName property value
	 * @exception Exception
	 */
	public void setSystemName(String systemName) {

		this.systemName = systemName;
	} // setSystemName

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property serviceCreationClassName.
	 */
	private String	serviceCreationClassName;

	/**
	 * This method returns the StaticForwardingEntry.serviceCreationClassName property value. This property is described as follows:
	 * 
	 * The scoping Service's CreationClassName.
	 * 
	 * @return String current serviceCreationClassName property value
	 * @exception Exception
	 */
	public String getServiceCreationClassName() {

		return this.serviceCreationClassName;
	} // getServiceCreationClassName

	/**
	 * This method sets the StaticForwardingEntry.serviceCreationClassName property value. This property is described as follows:
	 * 
	 * The scoping Service's CreationClassName.
	 * 
	 * @param String
	 *            new serviceCreationClassName property value
	 * @exception Exception
	 */
	public void setServiceCreationClassName(String serviceCreationClassName)
	{

		this.serviceCreationClassName = serviceCreationClassName;
	} // setServiceCreationClassName

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property serviceName.
	 */
	private String	serviceName;

	/**
	 * This method returns the StaticForwardingEntry.serviceName property value. This property is described as follows:
	 * 
	 * The scoping Service's Name.
	 * 
	 * @return String current serviceName property value
	 * @exception Exception
	 */
	public String getServiceName() {

		return this.serviceName;
	} // getServiceName

	/**
	 * This method sets the StaticForwardingEntry.serviceName property value. This property is described as follows:
	 * 
	 * The scoping Service's Name.
	 * 
	 * @param String
	 *            new serviceName property value
	 * @exception Exception
	 */
	public void setServiceName(String serviceName) {

		this.serviceName = serviceName;
	} // setServiceName

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property creationClassName.
	 */
	private String	creationClassName;

	/**
	 * This method returns the StaticForwardingEntry.creationClassName property value. This property is described as follows:
	 * 
	 * CreationClassName indicates the name of the class or the subclass used in the creation of an instance. When used with the other key properties
	 * of this class, this property allows all instances of this class and its subclasses to be uniquely identified.
	 * 
	 * @return String current creationClassName property value
	 * @exception Exception
	 */
	public String getCreationClassName() {

		return this.creationClassName;
	} // getCreationClassName

	/**
	 * This method sets the StaticForwardingEntry.creationClassName property value. This property is described as follows:
	 * 
	 * CreationClassName indicates the name of the class or the subclass used in the creation of an instance. When used with the other key properties
	 * of this class, this property allows all instances of this class and its subclasses to be uniquely identified.
	 * 
	 * @param String
	 *            new creationClassName property value
	 * @exception Exception
	 */
	public void setCreationClassName(String creationClassName) {

		this.creationClassName = creationClassName;
	} // setCreationClassName

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property mACAddress.
	 */
	private String	mACAddress;

	/**
	 * This method returns the StaticForwardingEntry.mACAddress property value. This property is described as follows:
	 * 
	 * Destination MAC address (unicast, multicast or broadcast) to which the filtering information applies. Note that the MAC address is formatted as
	 * twelve hexadecimal digits (e.g., "010203040506"), with each pair representing one of the six octets of the MAC address in "canonical" bit order
	 * according to RFC 2469.
	 * 
	 * @return String current mACAddress property value
	 * @exception Exception
	 */
	public String getMACAddress() {

		return this.mACAddress;
	} // getMACAddress

	/**
	 * This method sets the StaticForwardingEntry.mACAddress property value. This property is described as follows:
	 * 
	 * Destination MAC address (unicast, multicast or broadcast) to which the filtering information applies. Note that the MAC address is formatted as
	 * twelve hexadecimal digits (e.g., "010203040506"), with each pair representing one of the six octets of the MAC address in "canonical" bit order
	 * according to RFC 2469.
	 * 
	 * @param String
	 *            new mACAddress property value
	 * @exception Exception
	 */
	public void setMACAddress(String mACAddress) {

		this.mACAddress = mACAddress;
	} // setMACAddress

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property StaticStatus.
	 */

	public enum StaticStatus {
		OTHER,
		INVALID,
		PERMANENT,
		DELETEONRESET,
		DELETEONTIMEOUT
	}

	private StaticStatus	staticStatus;

	/**
	 * This method returns the StaticForwardingEntry.staticStatus property value. This property is described as follows:
	 * 
	 * The status of the entry.
	 * 
	 * @return int current staticStatus property value
	 * @exception Exception
	 */
	public StaticStatus getStaticStatus() {

		return this.staticStatus;
	} // getStaticStatus

	/**
	 * This method sets the StaticForwardingEntry.staticStatus property value. This property is described as follows:
	 * 
	 * The status of the entry.
	 * 
	 * @param int new staticStatus property value
	 * @exception Exception
	 */
	public void setStaticStatus(StaticStatus staticStatus) {

		this.staticStatus = staticStatus;
	} // setStaticStatus

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property allowedToGo.
	 */
	private int[]	allowedToGo;

	/**
	 * This method returns the StaticForwardingEntry.allowedToGo property value. This property is described as follows:
	 * 
	 * The ports to which frames with the destination MAC address arriving on the port represented by the SwitchPortStaticForwarding association are
	 * allowed to be forwarded.
	 * 
	 * @return int[] current allowedToGo property value
	 * @exception Exception
	 */
	public int[] getAllowedToGo() {

		return this.allowedToGo;
	} // getAllowedToGo

	/**
	 * This method sets the StaticForwardingEntry.allowedToGo property value. This property is described as follows:
	 * 
	 * The ports to which frames with the destination MAC address arriving on the port represented by the SwitchPortStaticForwarding association are
	 * allowed to be forwarded.
	 * 
	 * @param int[] new allowedToGo property value
	 * @exception Exception
	 */
	public void setAllowedToGo(int[] allowedToGo) {

		this.allowedToGo = allowedToGo;
	} // setAllowedToGo

} // Class StaticForwardingEntry
