/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Wed Jan 12
 * 09:21:06 CET 2011.
 */

package org.opennaas.extensions.router.model;

import java.io.*;
import java.lang.Exception;

/**
 * This Class contains accessor and mutator methods for all properties defined in the CIM class SwitchPortTransparentBridgingStatistics as well as
 * methods comparable to the invokeMethods defined for this class. This Class implements the SwitchPortTransparentBridgingStatisticsBean Interface.
 * The CIM class SwitchPortTransparentBridgingStatistics is described as follows:
 * 
 * Statistical information regarding a SwitchPort, at which transparent bridging is performed.
 */
public class SwitchPortTransparentBridgingStatistics extends
		SAPStatisticalInformation implements Serializable {

	/**
	 * This constructor creates a SwitchPortTransparentBridgingStatisticsBeanImpl Class which implements the
	 * SwitchPortTransparentBridgingStatisticsBean Interface, and encapsulates the CIM class SwitchPortTransparentBridgingStatistics in a Java Bean.
	 * The CIM class SwitchPortTransparentBridgingStatistics is described as follows:
	 * 
	 * Statistical information regarding a SwitchPort, at which transparent bridging is performed.
	 */
	public SwitchPortTransparentBridgingStatistics() {
	};

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property inFrames.
	 */
	private long	inFrames;

	/**
	 * This method returns the SwitchPortTransparentBridgingStatistics.inFrames property value. This property is described as follows:
	 * 
	 * The number of frames that have been received by the port from its segment. Note that a frame is only counted if and only if it is for a
	 * protocol being processed by the local bridging function, including bridge management frames.
	 * 
	 * @return long current inFrames property value
	 * @exception Exception
	 */
	public long getInFrames() {

		return this.inFrames;
	} // getInFrames

	/**
	 * This method sets the SwitchPortTransparentBridgingStatistics.inFrames property value. This property is described as follows:
	 * 
	 * The number of frames that have been received by the port from its segment. Note that a frame is only counted if and only if it is for a
	 * protocol being processed by the local bridging function, including bridge management frames.
	 * 
	 * @param long new inFrames property value
	 * @exception Exception
	 */
	public void setInFrames(long inFrames) {

		this.inFrames = inFrames;
	} // setInFrames

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property outFrames.
	 */
	private long	outFrames;

	/**
	 * This method returns the SwitchPortTransparentBridgingStatistics.outFrames property value. This property is described as follows:
	 * 
	 * The number of frames that have been transmitted by the port to its segment. Note that a frame is only counted if and only if it is for a
	 * protocol being processed by the local bridging function, including bridge management frames.
	 * 
	 * @return long current outFrames property value
	 * @exception Exception
	 */
	public long getOutFrames() {

		return this.outFrames;
	} // getOutFrames

	/**
	 * This method sets the SwitchPortTransparentBridgingStatistics.outFrames property value. This property is described as follows:
	 * 
	 * The number of frames that have been transmitted by the port to its segment. Note that a frame is only counted if and only if it is for a
	 * protocol being processed by the local bridging function, including bridge management frames.
	 * 
	 * @param long new outFrames property value
	 * @exception Exception
	 */
	public void setOutFrames(long outFrames) {

		this.outFrames = outFrames;
	} // setOutFrames

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property inDiscards.
	 */
	private long	inDiscards;

	/**
	 * This method returns the SwitchPortTransparentBridgingStatistics.inDiscards property value. This property is described as follows:
	 * 
	 * Count of valid frames received which were discarded (i.e., filtered) by the forwarding process.
	 * 
	 * @return long current inDiscards property value
	 * @exception Exception
	 */
	public long getInDiscards() {

		return this.inDiscards;
	} // getInDiscards

	/**
	 * This method sets the SwitchPortTransparentBridgingStatistics.inDiscards property value. This property is described as follows:
	 * 
	 * Count of valid frames received which were discarded (i.e., filtered) by the forwarding process.
	 * 
	 * @param long new inDiscards property value
	 * @exception Exception
	 */
	public void setInDiscards(long inDiscards) {

		this.inDiscards = inDiscards;
	} // setInDiscards

} // Class SwitchPortTransparentBridgingStatistics
