/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Wed Jan 12
 * 09:21:06 CET 2011.
 */

package org.opennaas.extensions.router.model;

import java.io.*;
import java.lang.Exception;

/**
 * This Class contains accessor and mutator methods for all properties defined in the CIM class RedirectionService as well as methods comparable to
 * the invokeMethods defined for this class. This Class implements the RedirectionServiceBean Interface. The CIM class RedirectionService is described
 * as follows:
 * 
 * RedirectionService provides the capability to manage redirection services. Examples of this include any video stream directed to a Network Port (by
 * the operating system) on a Computer System redirected out to a remote administrator's console. Similarly this can include input redirected into the
 * same Network Port. Other examples include the redirection of IO from a logical element to a remote or local destination. Each redirection stream is
 * accessible via a SAP. This service can support multiple redirection types via multiple associated SAPs.
 */
public class RedirectionService extends Service implements Serializable {

	/**
	 * This constructor creates a RedirectionServiceBeanImpl Class which implements the RedirectionServiceBean Interface, and encapsulates the CIM
	 * class RedirectionService in a Java Bean. The CIM class RedirectionService is described as follows:
	 * 
	 * RedirectionService provides the capability to manage redirection services. Examples of this include any video stream directed to a Network Port
	 * (by the operating system) on a Computer System redirected out to a remote administrator's console. Similarly this can include input redirected
	 * into the same Network Port. Other examples include the redirection of IO from a logical element to a remote or local destination. Each
	 * redirection stream is accessible via a SAP. This service can support multiple redirection types via multiple associated SAPs.
	 */
	public RedirectionService() {
	};

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property RedirectionServiceType.
	 */

	public enum RedirectionServiceType {
		UNKNOWN,
		OTHER,
		TEXT,
		KVM,
		USB,
		MEDIA,
		DMTF_RESERVED,
		VENDOR_SPECIFIED
	}

	private RedirectionServiceType	redirectionServiceType;

	/**
	 * This method returns the RedirectionService.redirectionServiceType property value. This property is described as follows:
	 * 
	 * An enumerated array indicating the type(s) of Redirection supported by this Service. This value is set to the type of redirection service that
	 * this service represents. A value set to 2 = "Text" shall indicate a Text Console Redirection service. A value set to 3 = "KVM" shall indicate a
	 * Keyboard, Mouse and Video Console Redirection service. A value set to 4 = "USB" shall indicate a USB Redirection service. A value set to 5 =
	 * "media" shall indicate a traditional Media Redirection service.
	 * 
	 * @return int current redirectionServiceType property value
	 * @exception Exception
	 */
	public RedirectionServiceType getRedirectionServiceType() {

		return this.redirectionServiceType;
	} // getRedirectionServiceType

	/**
	 * This method sets the RedirectionService.redirectionServiceType property value. This property is described as follows:
	 * 
	 * An enumerated array indicating the type(s) of Redirection supported by this Service. This value is set to the type of redirection service that
	 * this service represents. A value set to 2 = "Text" shall indicate a Text Console Redirection service. A value set to 3 = "KVM" shall indicate a
	 * Keyboard, Mouse and Video Console Redirection service. A value set to 4 = "USB" shall indicate a USB Redirection service. A value set to 5 =
	 * "media" shall indicate a traditional Media Redirection service.
	 * 
	 * @param int new redirectionServiceType property value
	 * @exception Exception
	 */
	public void setRedirectionServiceType(RedirectionServiceType
			redirectionServiceType) {

		this.redirectionServiceType = redirectionServiceType;
	} // setRedirectionServiceType

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property otherRedirectionServiceType.
	 */
	private String	otherRedirectionServiceType;

	/**
	 * This method returns the RedirectionService.otherRedirectionServiceType property value. This property is described as follows:
	 * 
	 * A string describing the Redirection Service when the value of the RedirectionServiceType property is set to 1 = "Other".
	 * 
	 * @return String current otherRedirectionServiceType property value
	 * @exception Exception
	 */
	public String getOtherRedirectionServiceType() {

		return this.otherRedirectionServiceType;
	} // getOtherRedirectionServiceType

	/**
	 * This method sets the RedirectionService.otherRedirectionServiceType property value. This property is described as follows:
	 * 
	 * A string describing the Redirection Service when the value of the RedirectionServiceType property is set to 1 = "Other".
	 * 
	 * @param String
	 *            new otherRedirectionServiceType property value
	 * @exception Exception
	 */
	public void setOtherRedirectionServiceType(String
			otherRedirectionServiceType) {

		this.otherRedirectionServiceType = otherRedirectionServiceType;
	} // setOtherRedirectionServiceType

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property maxCurrentEnabledSAPs.
	 */
	private int	maxCurrentEnabledSAPs;

	/**
	 * This method returns the RedirectionService.maxCurrentEnabledSAPs property value. This property is described as follows:
	 * 
	 * Maximum number of concurrently enabled redirection SAPs. The Service may have multiple (more than this number) SAPs associated with it.
	 * However, the number of Active SAPs (EnabledState=Enabled) associated with this Service instance cannot exceed this number. This limitation
	 * could come from hardware limitations (e.g. one COM port can only redirect the text to one console), or from any other software resource
	 * limitations.
	 * 
	 * @return int current maxCurrentEnabledSAPs property value
	 * @exception Exception
	 */
	public int getMaxCurrentEnabledSAPs() {

		return this.maxCurrentEnabledSAPs;
	} // getMaxCurrentEnabledSAPs

	/**
	 * This method sets the RedirectionService.maxCurrentEnabledSAPs property value. This property is described as follows:
	 * 
	 * Maximum number of concurrently enabled redirection SAPs. The Service may have multiple (more than this number) SAPs associated with it.
	 * However, the number of Active SAPs (EnabledState=Enabled) associated with this Service instance cannot exceed this number. This limitation
	 * could come from hardware limitations (e.g. one COM port can only redirect the text to one console), or from any other software resource
	 * limitations.
	 * 
	 * @param int new maxCurrentEnabledSAPs property value
	 * @exception Exception
	 */
	public void setMaxCurrentEnabledSAPs(int maxCurrentEnabledSAPs) {

		this.maxCurrentEnabledSAPs = maxCurrentEnabledSAPs;
	} // setMaxCurrentEnabledSAPs

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property SharingMode.
	 */

	public enum SharingMode {
		UNKNOWN,
		EXCLUSIVE,
		SHARED
	}

	private SharingMode	sharingMode;

	/**
	 * This method returns the RedirectionService.sharingMode property value. This property is described as follows:
	 * 
	 * An enumeration specifying the impact of enabling the redirection of the text console flow on the original destination of the flow. The original
	 * destination is modeled as a concrete subclass of LogicalDevice and associated to this service using a ServiceAffectsElement association). If
	 * this value is Exclusive, it shall mean that when the element flow is actively being redirected, then the element being redirected cannot be
	 * accessed at the original destination. If this value is Shared, it shall mean that when the element flow is actively being redirected, then the
	 * element being redirected can still be accessed at the original destination.
	 * 
	 * @return int current sharingMode property value
	 * @exception Exception
	 */
	public SharingMode getSharingMode() {

		return this.sharingMode;
	} // getSharingMode

	/**
	 * This method sets the RedirectionService.sharingMode property value. This property is described as follows:
	 * 
	 * An enumeration specifying the impact of enabling the redirection of the text console flow on the original destination of the flow. The original
	 * destination is modeled as a concrete subclass of LogicalDevice and associated to this service using a ServiceAffectsElement association). If
	 * this value is Exclusive, it shall mean that when the element flow is actively being redirected, then the element being redirected cannot be
	 * accessed at the original destination. If this value is Shared, it shall mean that when the element flow is actively being redirected, then the
	 * element being redirected can still be accessed at the original destination.
	 * 
	 * @param int new sharingMode property value
	 * @exception Exception
	 */
	public void setSharingMode(SharingMode sharingMode) {

		this.sharingMode = sharingMode;
	} // setSharingMode

} // Class RedirectionService
