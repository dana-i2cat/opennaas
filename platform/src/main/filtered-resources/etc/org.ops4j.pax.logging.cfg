################################################################################
#
#    Licensed to the Apache Software Foundation (ASF) under one or more
#    contributor license agreements.  See the NOTICE file distributed with
#    this work for additional information regarding copyright ownership.
#    The ASF licenses this file to You under the Apache License, Version 2.0
#    (the "License"); you may not use this file except in compliance with
#    the License.  You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.
#
################################################################################

opennaas.log.fastPattern = %d{ABSOLUTE} %-5.5p | %10.10t | %-32.32c | %m%n
opennaas.log.slowPattern = %d{ABSOLUTE} %-5.5p | %10.10t | %-32.32C %4L | %m%n
opennaas.log.usedPattern = ${opennaas.log.fastPattern}

# Root logger
log4j.rootLogger = WARN, allout, osgi:VmLogAppender

# CORE
log4j.logger.org.opennaas.core = INFO, coreout
log4j.logger.net.i2cat.nexus = INFO, coreout

# ROUTER 
log4j.logger.org.opennaas.extensions.router = INFO, routerout
log4j.logger.org.opennaas.extensions.queuemanager = INFO, routerout
log4j.logger.org.opennaas.extensions.router.capability.chassis = INFO, routerout
log4j.logger.org.opennaas.extensions.router.capability.gretunnel = INFO, routerout
log4j.logger.org.opennaas.extensions.router.capability.ip = INFO, routerout
log4j.logger.org.opennaas.extensions.router.capability.ospf = INFO, routerout
log4j.logger.org.opennaas.extensions.router.capability.staticroute = INFO, routerout

# MACBRIDGE
log4j.logger.org.opennaas.extensions.macbridge = INFO, macbridgeout

# NETWORK -first one does not work. Do it explicitly
log4j.logger.org.opennaas.extensions.network = INFO, networkout
log4j.logger.org.opennaas.extensions.network.cabability.basic = INFO, networkout
log4j.logger.org.opennaas.extensions.network.capability.ospf = INFO, networkout
log4j.logger.org.opennaas.extensions.network.capability.queue = INFO, networkout
log4j.logger.org.opennaas.extensions.router.model.mappers.Cim2NdlMapper = INFO, networkout

# BOD
log4j.logger.org.opennaas.extensions.bod = INFO, bodout

# OPTICAL SWITCH
log4j.logger.org.opennaas.extensions.roadm = INFO, opticalswitchout

# VNMAPPER
log4j.logger.org.opennaas.extensions.vnmapper = INFO, vnmapperout

# OFSWITCH
log4j.logger.org.opennaas.extensions.openflowswitch = INFO, ofswitchout

# VCPE
log4j.logger.org.opennaas.extensions.vcpe = INFO, vcpeout

# NETCONF
log4j.logger.net.i2cat.netconf = INFO, netconfout
log4j.logger.net.i2cat.mantychore.netconf = INFO, netconfout

# PROTOCOLS AND TRANSPORTS
log4j.logger.org.opennaas.core.protocols = INFO, protocolout
log4j.logger.org.opennaas.extensions.transports = INFO, protocolout
log4j.logger.org.opennaas.extensions.protocols = INFO, protocolout

# QUUANTUM
log4j.logger.org.opennaas.extensions.quantum = DEBUG, quantumout


# WS
log4j.logger.org.opennaas.extensions.ws = INFO, wsout
log4j.logger.org.apache.cxf = INFO, wsout
log4j.logger.org.apache.cxf.dosgi = INFO, wsout
################################################################################
# From: http://stackoverflow.com/questions/1839647/how-to-configure-log4j-to-log-different-log-levels-to-different-files-for-the-sa
# "If you define the same logger twice, one of them gets overwritten"
# If that's true, that's why there are some logs not showed where we'd like!
# We'd need to define filters if we want logs below to be published with INFO level to wsout 
# I think filters can only be defined in XML log4j config :S
#
#log4j.logger.org.opennaas.extensions.router = INFO, wsout
#log4j.logger.org.opennaas.extensions.network = INFO, wsout
#log4j.logger.org.opennaas.extensions.bod = INFO, wsout
#log4j.logger.org.opennaas.extensions.roadm = INFO, wsout
#log4j.logger.org.opennaas.extensions.queuemanager = INFO, wsout
################################################################################

# ITESTS
log4j.logger.net.i2cat.nexus.tests = INFO, itestsout
log4j.logger.net.i2cat.nexus.resources.tests = INFO, itestsout
log4j.logger.net.i2cat.nexus.events.tests = INFO, itestsout
log4j.logger.org.opennaas.extensions.nexus.alarms.repository.test = INFO, itestsout
log4j.logger.net.i2cat.mantychore.tests = INFO, itestsout
log4j.logger.org.opennaas.extensions.router.repository.tests = INFO, itestsout
log4j.logger.org.opennaas.extensions.queuemanager.tests = INFO, itestsout
log4j.logger.org.opennaas.extensions.router.model.tests = INFO, itestsout
log4j.logger.org.opennaas.extensions.router.junos.action.tests = INFO, itestsout
log4j.logger.queue = INFO, itestsout
log4j.logger.mock = INFO, itestsout
log4j.logger.mantychore = INFO, itestsout
log4j.logger.luminis = INFO, itestsout
log4j.logger.interfaces = INFO, itestsout
log4j.logger.api = INFO, itestsout
log4j.logger.automaticrefresh = INFO, itestsout
log4j.logger.helpers = INFO, itestsout
log4j.logger.org.opennaas.core.testprofile = INFO, itestsout
log4j.logger.org.opennaas.router.tests = INFO, itestsout
log4j.logger.org.opennaas.tests = INFO, itestsout
log4j.logger.org.opennaas.itests = INFO, itestsout

# CONSOLE appender
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=${opennaas.log.usedPattern}

# ALL file appender
log4j.appender.allout=org.apache.log4j.RollingFileAppender
log4j.appender.allout.MaxFileSize=1000KB
log4j.appender.allout.layout=org.apache.log4j.PatternLayout
log4j.appender.allout.layout.ConversionPattern=${opennaas.log.usedPattern}
log4j.appender.allout.file=${karaf.base}/data/log/all.log
log4j.appender.allout.append=true

# CORE file appender
log4j.appender.coreout=org.apache.log4j.RollingFileAppender
log4j.appender.coreout.MaxFileSize=1000KB
log4j.appender.coreout.layout=org.apache.log4j.PatternLayout
log4j.appender.coreout.layout.ConversionPattern=${opennaas.log.usedPattern}
log4j.appender.coreout.file=${karaf.base}/data/log/core.log
log4j.appender.coreout.append=true

# ROUTER file appender
log4j.appender.routerout=org.apache.log4j.RollingFileAppender
log4j.appender.routerout.MaxFileSize=1000KB
log4j.appender.routerout.layout=org.apache.log4j.PatternLayout
log4j.appender.routerout.layout.ConversionPattern=${opennaas.log.usedPattern}
log4j.appender.routerout.file=${karaf.base}/data/log/router.log
log4j.appender.routerout.append=true

# NETCONF file appender
log4j.appender.netconfout=org.apache.log4j.RollingFileAppender
log4j.appender.netconfout.MaxFileSize=1000KB
log4j.appender.netconfout.layout=org.apache.log4j.PatternLayout
log4j.appender.netconfout.layout.ConversionPattern=${opennaas.log.usedPattern}
log4j.appender.netconfout.file=${karaf.base}/data/log/router-netconf.log
log4j.appender.netconfout.append=true

# NETWORK file appender
log4j.appender.networkout=org.apache.log4j.RollingFileAppender
log4j.appender.networkout.MaxFileSize=1000KB
log4j.appender.networkout.layout=org.apache.log4j.PatternLayout
log4j.appender.networkout.layout.ConversionPattern=${opennaas.log.usedPattern}
log4j.appender.networkout.file=${karaf.base}/data/log/network.log
log4j.appender.networkout.append=true

# BOD file appender
log4j.appender.bodout=org.apache.log4j.RollingFileAppender
log4j.appender.bodout.MaxFileSize=1000KB
log4j.appender.bodout.layout=org.apache.log4j.PatternLayout
log4j.appender.bodout.layout.ConversionPattern=${opennaas.log.usedPattern}
log4j.appender.bodout.file=${karaf.base}/data/log/bod.log
log4j.appender.bodout.append=true

# VNMAPPER file appender
log4j.appender.vnmapperout=org.apache.log4j.RollingFileAppender
log4j.appender.vnmapperout.MaxFileSize=1000KB
log4j.appender.vnmapperout.layout=org.apache.log4j.PatternLayout
log4j.appender.vnmapperout.layout.ConversionPattern=${opennaas.log.usedPattern}
log4j.appender.vnmapperout.file=${karaf.base}/data/log/vnmapperout.log
log4j.appender.vnmapperout.append=true

# OFSWITCH file appender
log4j.appender.ofswitchout=org.apache.log4j.RollingFileAppender
log4j.appender.ofswitchout.MaxFileSize=1000KB
log4j.appender.ofswitchout.layout=org.apache.log4j.PatternLayout
log4j.appender.ofswitchout.layout.ConversionPattern=${opennaas.log.usedPattern}
log4j.appender.ofswitchout.file=${karaf.base}/data/log/ofswitchout.log
log4j.appender.ofswitchout.append=true

# QUANTUM file apprender
log4j.appender.quantumout=org.apache.log4j.RollingFileAppender
log4j.appender.quantumout.MaxFileSize=1000KB
log4j.appender.quantumout.layout=org.apache.log4j.PatternLayout
log4j.appender.quantumout.layout.ConversionPattern=${opennaas.log.usedPattern}
log4j.appender.quantumout.file=${karaf.base}/data/log/quantumout.log
log4j.appender.quantumout.append=true

# OPTICALSWITCH file appender
log4j.appender.opticalswitchout=org.apache.log4j.RollingFileAppender
log4j.appender.opticalswitchout.MaxFileSize=1000KB
log4j.appender.opticalswitchout.layout=org.apache.log4j.PatternLayout
log4j.appender.opticalswitchout.layout.ConversionPattern=${opennaas.log.usedPattern}
log4j.appender.opticalswitchout.file=${karaf.base}/data/log/opticalswitch.log
log4j.appender.opticalswitchout.append=true

# MACBRIDGE file appender
log4j.appender.macbridgeout=org.apache.log4j.RollingFileAppender
log4j.appender.macbridgeout.MaxFileSize=1000KB
log4j.appender.macbridgeout.layout=org.apache.log4j.PatternLayout
log4j.appender.macbridgeout.layout.ConversionPattern=${opennaas.log.usedPattern}
log4j.appender.macbridgeout.file=${karaf.base}/data/log/macbridge.log
log4j.appender.macbridgeout.append=true

# VCPE file appender
log4j.appender.vcpeout=org.apache.log4j.RollingFileAppender
log4j.appender.vcpeout.MaxFileSize=1000KB
log4j.appender.vcpeout.layout=org.apache.log4j.PatternLayout
log4j.appender.vcpeout.layout.ConversionPattern=${opennaas.log.usedPattern}
log4j.appender.vcpeout.file=${karaf.base}/data/log/vcpe.log
log4j.appender.vcpeout.append=true

# PROTOCOLS file appender
log4j.appender.protocolout=org.apache.log4j.RollingFileAppender
log4j.appender.protocolout.MaxFileSize=1000KB
log4j.appender.protocolout.layout=org.apache.log4j.PatternLayout
log4j.appender.protocolout.layout.ConversionPattern=${opennaas.log.usedPattern}
log4j.appender.protocolout.file=${karaf.base}/data/log/protocols.log
log4j.appender.protocolout.append=true

# WS file appender 
log4j.appender.wsout=org.apache.log4j.RollingFileAppender
log4j.appender.wsout.MaxFileSize=1000KB
log4j.appender.wsout.layout=org.apache.log4j.PatternLayout
log4j.appender.wsout.layout.ConversionPattern=${opennaas.log.usedPattern}
log4j.appender.wsout.file=${karaf.base}/data/log/ws.log
log4j.appender.wsout.append=true

# ITESTS file appender
log4j.appender.itestsout=org.apache.log4j.RollingFileAppender
log4j.appender.itestsout.MaxFileSize=1000KB
log4j.appender.itestsout.layout=org.apache.log4j.PatternLayout
log4j.appender.itestsout.layout.ConversionPattern=${opennaas.log.usedPattern}
log4j.appender.itestsout.file=${karaf.base}/data/log/itests.log
log4j.appender.itestsout.append=true
