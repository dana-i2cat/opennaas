<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
	xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0	http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd 
						http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0 	http://aries.apache.org/schemas/blueprint-cm/blueprint-cm-1.1.0.xsd">


	<!-- allows using properties defined in org.opennaas.cfg config file, in this blueprint file -->
	<!-- 
	Using update-strategy="none" is a workaround for the issue of 
	having the blueprint container constantly going on and off if using update-strategy="reload",
	as explained here:
	https://mail-archives.apache.org/mod_mbox/karaf-user/201404.mbox/%3C535A2DF6.5080400%40i2cat.net%3E
	
	NOTE: using update-strategy="none" makes opennaas unable to react to changes made to properties 
	-->
    <cm:property-placeholder persistent-id="org.opennaas" update-strategy="none">
  		<cm:default-properties>
            <cm:property name="ws.rest.url" value="/opennaas"/>
        </cm:default-properties> 
   	</cm:property-placeholder>
	
	<!-- Get a reference to OpenNaaS resource manager service -->
	<reference id="resourceManager" interface="org.opennaas.core.resources.IResourceManager"/>
	
	<!-- Instantiate NCLProvisioner components -->
	<bean id="nclModel" class="org.opennaas.extensions.ofertie.ncl.provisioner.model.NCLModel"/>
	<bean id="qosPDP" class="org.opennaas.extensions.ofertie.ncl.provisioner.components.mockup.QoSPDPMockup"/>
	<bean id="networkSelector" class="org.opennaas.extensions.ofertie.ncl.provisioner.components.mockup.NetworkSelectorMockup" init-method="init">
		<property name="resourceManager" ref="resourceManager" />
	</bean>


	<!-- Instantiate NCLProvisioner and publish it -->
	<bean id="nclProvisioner" class="org.opennaas.extensions.ofertie.ncl.provisioner.NCLProvisioner">
		<property name="qoSPDP" ref="qosPDP" />
		<property name="networkSelector" ref="networkSelector" />
		<property name="model" ref="nclModel" />
		<property name="resourceManager" ref="resourceManager" />
	</bean>
	<service ref="nclProvisioner" interface="org.opennaas.extensions.ofertie.ncl.provisioner.api.INCLProvisioner">
		<service-properties>
			<!-- Rest -->
			<entry key="service.exported.interfaces" value="*"/>
			<entry key="service.exported.configs" value="org.apache.cxf.rs"/>
			<entry key="service.exported.intents" value="HTTP"/>	
			<entry key="org.apache.cxf.rs.httpservice.context" value="${ws.rest.url}/ofertie/ncl"/>
			<entry key="org.apache.cxf.rs.address" value="/"/>
			<entry key="org.apache.cxf.httpservice.requirefilter" value="true"/>
			<entry key="org.apache.cxf.rs.out.interceptors" value="org.opennaas.extensions.ofertie.ncl.interceptor.ProviderOutInterceptor" />
		</service-properties>
	</service>
	
</blueprint>
