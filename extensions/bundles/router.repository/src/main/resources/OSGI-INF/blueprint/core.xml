<?xml version="1.0" encoding="UTF-8"?>

<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0">
	<!-- Build the bootstrapper -->
	<bean id="mantychoreBootstrapperFactory" class="org.opennaas.extensions.router.repository.MantychoreBootstrapperFactory"/>
	<!-- Workaround for  https://issues.apache.org/jira/browse/ARIES-796:
	Resolve and inject entityManagerFactory and get the entityManager using code in ResourceDescriptorRepository. 
	Obtained entityManager is not container managed, then. 
	Given unit MUST already be registered as an OSGi service for this to work. -->
	<reference id="entityManagerFactory" interface="javax.persistence.EntityManagerFactory" filter="(osgi.unit.name=ResourceCore)"/>
	<bean id="resourceDescriptorRepository"
	class="org.opennaas.core.resources.descriptor.ResourceDescriptorRepository"
	init-method="initializeEntityManager" destroy-method="close">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
	<bean id="mantychoreRepository" class="org.opennaas.extensions.router.repository.MantychoreRepository" init-method="init">
		<argument value="router"/>
		<property name="resourceDescriptorRepository" ref="resourceDescriptorRepository"/>
		<property name="resourceBootstrapperFactory" ref="mantychoreBootstrapperFactory"/>
	</bean>
	<!-- Get capability factories from the OSGi registry -->
	<reference-list id="capabilityFactory" interface="org.opennaas.core.resources.capability.ICapabilityFactory" availability="optional">
		<reference-listener ref="mantychoreRepository" bind-method="capabilityFactoryAdded" unbind-method="capabilityFactoryDeleted"/>
	</reference-list>
	<service ref="mantychoreRepository" interface="org.opennaas.core.resources.IResourceRepository">
		<service-properties>
			<entry key="type" value="router"/>
			<entry key="version" value="1.0.0"/>
		</service-properties>
	</service>
</blueprint>
