/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Wed Jan 12
 * 09:21:06 CET 2011.
 */

package org.opennaas.extensions.router.model;

import java.io.*;

/**
 * This Class contains accessor and mutator methods for all properties defined in the CIM class EndpointIdentity as well as methods comparable to the
 * invokeMethods defined for this class. This Class implements the EndpointIdentityBean Interface. The CIM class EndpointIdentity is described as
 * follows:
 * 
 * CIM_EndpointIdentity indicates that two ProtocolEndpoints represent different aspects of the same underlying address or protocol-specific ID. This
 * association refines the CIM_LogicalIdentity superclass by restricting it to the Endpoint level and defining its use in well understood scenarios.
 * One of these scenarios is to represent that an Endpoint has both 'LAN' and protocol-specific aspects. For example, an Endpoint could be both a
 * LANEndpoint as well as a DHCPEndpoint.
 */
public class EndpointIdentity extends LogicalIdentity implements Serializable
{

	/**
	 * This constructor creates a EndpointIdentityBeanImpl Class which implements the EndpointIdentityBean Interface, and encapsulates the CIM class
	 * EndpointIdentity in a Java Bean. The CIM class EndpointIdentity is described as follows:
	 * 
	 * CIM_EndpointIdentity indicates that two ProtocolEndpoints represent different aspects of the same underlying address or protocol-specific ID.
	 * This association refines the CIM_LogicalIdentity superclass by restricting it to the Endpoint level and defining its use in well understood
	 * scenarios. One of these scenarios is to represent that an Endpoint has both 'LAN' and protocol-specific aspects. For example, an Endpoint could
	 * be both a LANEndpoint as well as a DHCPEndpoint.
	 */
	public EndpointIdentity() {
	};

	/**
	 * This method create an Association of the type EndpointIdentity between one ProtocolEndpoint object and ProtocolEndpoint object
	 */
	public static EndpointIdentity link(ProtocolEndpoint
			systemElement, ProtocolEndpoint sameElement) {

		return (EndpointIdentity) Association.link(EndpointIdentity.class, systemElement, sameElement);
	}// link

} // Class EndpointIdentity
