/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Wed Jan 12
 * 09:21:06 CET 2011.
 */

package org.opennaas.extensions.router.model;

import java.io.*;
import java.lang.Exception;

/**
 * This Class contains accessor and mutator methods for all properties defined in the CIM class ConditioningServiceOnEndpoint as well as methods
 * comparable to the invokeMethods defined for this class. This Class implements the ConditioningServiceOnEndpointBean Interface. The CIM class
 * ConditioningServiceOnEndpoint is described as follows:
 * 
 * The QoS Model describes the traffic conditioning functions in place for a network device. In order to 'be conditioned', a packet is received at a
 * ProtocolEndpoint. After 'conditioning', a packet is dropped or leaves the device via a ProtocolEndpoint. This dependency on ProtocolEndpoints is
 * defined by the ConditioningServiceOn Endpoint association. A property of the association, ServiceType, indicates whether the ConditioningService
 * handles incoming ("Ingress") or out-going ("Egress") packets. This association is deprecated since different cardinalities are needed on the
 * ingress and egress classes. This cannot be done using a single association.
 */
@Deprecated
public class ConditioningServiceOnEndpoint extends Dependency implements
		Serializable {

	/**
	 * This constructor creates a ConditioningServiceOnEndpointBeanImpl Class which implements the ConditioningServiceOnEndpointBean Interface, and
	 * encapsulates the CIM class ConditioningServiceOnEndpoint in a Java Bean. The CIM class ConditioningServiceOnEndpoint is described as follows:
	 * 
	 * The QoS Model describes the traffic conditioning functions in place for a network device. In order to 'be conditioned', a packet is received at
	 * a ProtocolEndpoint. After 'conditioning', a packet is dropped or leaves the device via a ProtocolEndpoint. This dependency on ProtocolEndpoints
	 * is defined by the ConditioningServiceOn Endpoint association. A property of the association, ServiceType, indicates whether the
	 * ConditioningService handles incoming ("Ingress") or out-going ("Egress") packets. This association is deprecated since different cardinalities
	 * are needed on the ingress and egress classes. This cannot be done using a single association.
	 */
	public ConditioningServiceOnEndpoint() {
	};

	/**
	 * This method create an Association of the type ConditioningServiceOnEndpoint between one ProtocolEndpoint object and ConditioningService object
	 */
	@Deprecated
	public static ConditioningServiceOnEndpoint link(ProtocolEndpoint
			antecedent, ConditioningService dependent) {

		return (ConditioningServiceOnEndpoint) Association.link(ConditioningServiceOnEndpoint.class, antecedent, dependent);
	}// link

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property ServiceType.
	 */
	@Deprecated
	public enum ServiceType {
		UNKNOWN,
		INGRESS,
		EGRESS
	}

	@Deprecated
	private ServiceType	serviceType;

	/**
	 * This method returns the ConditioningServiceOnEndpoint.serviceType property value. This property is described as follows:
	 * 
	 * Indicates whether a packet is incoming (value = 1, "Ingress") or out-going (value = 2, "Egress") at the ProtocolEndpoint, relative to the
	 * ConditioningService.
	 * 
	 * @return int current serviceType property value
	 * @exception Exception
	 */
	@Deprecated
	public ServiceType getServiceType() {

		return this.serviceType;
	} // getServiceType

	/**
	 * This method sets the ConditioningServiceOnEndpoint.serviceType property value. This property is described as follows:
	 * 
	 * Indicates whether a packet is incoming (value = 1, "Ingress") or out-going (value = 2, "Egress") at the ProtocolEndpoint, relative to the
	 * ConditioningService.
	 * 
	 * @param int new serviceType property value
	 * @exception Exception
	 */
	@Deprecated
	public void setServiceType(ServiceType serviceType) {

		this.serviceType = serviceType;
	} // setServiceType

} // Class ConditioningServiceOnEndpoint
