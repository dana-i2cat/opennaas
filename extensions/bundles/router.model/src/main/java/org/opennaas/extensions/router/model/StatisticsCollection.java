/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Wed Jan 12
 * 09:21:06 CET 2011.
 */

package org.opennaas.extensions.router.model;

import java.util.*;
import java.io.*;
import java.lang.Exception;

/**
 * This Class contains accessor and mutator methods for all properties defined in the CIM class StatisticsCollection as well as methods comparable to
 * the invokeMethods defined for this class. This Class implements the StatisticsCollectionBean Interface. The CIM class StatisticsCollection is
 * described as follows:
 * 
 * A subclass of SystemSpecificCollection which collects together statistics for a system. This class forms an 'anchor point' from which all the
 * statistics kept for the system can be found (via the MemberOfCollection associations).
 */
public class StatisticsCollection extends SystemSpecificCollection implements
		Serializable {

	/**
	 * This constructor creates a StatisticsCollectionBeanImpl Class which implements the StatisticsCollectionBean Interface, and encapsulates the CIM
	 * class StatisticsCollection in a Java Bean. The CIM class StatisticsCollection is described as follows:
	 * 
	 * A subclass of SystemSpecificCollection which collects together statistics for a system. This class forms an 'anchor point' from which all the
	 * statistics kept for the system can be found (via the MemberOfCollection associations).
	 */
	public StatisticsCollection() {
	};

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property sampleInterval.
	 */
	private Date	sampleInterval;

	/**
	 * This method returns the StatisticsCollection.sampleInterval property value. This property is described as follows:
	 * 
	 * This property provides the minimum sampling interval for the associated statistics so that client applications can determine the minimum
	 * interval that the StatisticsCollection should be sampled. If the statistics are sampled at different cycles, this property MUST be set to a
	 * zero time interval.
	 * 
	 * @return Date current sampleInterval property value
	 * @exception Exception
	 */
	public Date getSampleInterval() {

		return this.sampleInterval;
	} // getSampleInterval

	/**
	 * This method sets the StatisticsCollection.sampleInterval property value. This property is described as follows:
	 * 
	 * This property provides the minimum sampling interval for the associated statistics so that client applications can determine the minimum
	 * interval that the StatisticsCollection should be sampled. If the statistics are sampled at different cycles, this property MUST be set to a
	 * zero time interval.
	 * 
	 * @param Date
	 *            new sampleInterval property value
	 * @exception Exception
	 */
	public void setSampleInterval(Date sampleInterval) {

		this.sampleInterval = sampleInterval;
	} // setSampleInterval

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property timeLastSampled.
	 */
	private Date	timeLastSampled;

	/**
	 * This method returns the StatisticsCollection.timeLastSampled property value. This property is described as follows:
	 * 
	 * The time that the statistics collection was last sampled. Note that this property MAY be used to trigger an indication for 'push' delivery of
	 * statistics samples.
	 * 
	 * @return Date current timeLastSampled property value
	 * @exception Exception
	 */
	public Date getTimeLastSampled() {

		return this.timeLastSampled;
	} // getTimeLastSampled

	/**
	 * This method sets the StatisticsCollection.timeLastSampled property value. This property is described as follows:
	 * 
	 * The time that the statistics collection was last sampled. Note that this property MAY be used to trigger an indication for 'push' delivery of
	 * statistics samples.
	 * 
	 * @param Date
	 *            new timeLastSampled property value
	 * @exception Exception
	 */
	public void setTimeLastSampled(Date timeLastSampled) {

		this.timeLastSampled = timeLastSampled;
	} // setTimeLastSampled

} // Class StatisticsCollection
