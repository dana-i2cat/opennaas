/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Wed Jan 12
 * 09:21:06 CET 2011.
 */

package org.opennaas.extensions.router.model;

import java.io.*;
import java.lang.Exception;

/**
 * This Class contains accessor and mutator methods for all properties defined in the CIM class ParametersForMethod as well as methods comparable to
 * the invokeMethods defined for this class. This Class implements the ParametersForMethodBean Interface. The CIM class ParametersForMethod is
 * described as follows:
 * 
 * ParametersForMethod represents the association between MethodParameters classes and a ManagedElement that has a method that can use the
 * MethodParameters during its invocation. This association is optional. The Method Parameters instance can be passed as a parameter to a method or
 * used to create a method signature before the method is invoked. This association is useful for finding all the valid MethodParameters instances for
 * a particular method. It might be particularly useful for user-oriented interfaces and automated or policy driven method invocations.
 */
public class ParametersForMethod extends Association implements Serializable
{

	/**
	 * This constructor creates a ParametersForMethodBeanImpl Class which implements the ParametersForMethodBean Interface, and encapsulates the CIM
	 * class ParametersForMethod in a Java Bean. The CIM class ParametersForMethod is described as follows:
	 * 
	 * ParametersForMethod represents the association between MethodParameters classes and a ManagedElement that has a method that can use the
	 * MethodParameters during its invocation. This association is optional. The Method Parameters instance can be passed as a parameter to a method
	 * or used to create a method signature before the method is invoked. This association is useful for finding all the valid MethodParameters
	 * instances for a particular method. It might be particularly useful for user-oriented interfaces and automated or policy driven method
	 * invocations.
	 */
	public ParametersForMethod() {
	};

	/**
	 * This method create an Association of the type ParametersForMethod between one MethodParameters object and ManagedElement object
	 */
	public static ParametersForMethod link(MethodParameters
			parameters, ManagedElement theMethod) {

		return (ParametersForMethod) Association.link(ParametersForMethod.class, parameters, theMethod);
	}// link

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property methodName.
	 */
	private String	methodName;

	/**
	 * This method returns the ParametersForMethod.methodName property value. This property is described as follows:
	 * 
	 * The name of the method that can use the referenced instance of MethodParameters during its invocation.
	 * 
	 * @return String current methodName property value
	 * @exception Exception
	 */
	public String getMethodName() {

		return this.methodName;
	} // getMethodName

	/**
	 * This method sets the ParametersForMethod.methodName property value. This property is described as follows:
	 * 
	 * The name of the method that can use the referenced instance of MethodParameters during its invocation.
	 * 
	 * @param String
	 *            new methodName property value
	 * @exception Exception
	 */
	public void setMethodName(String methodName) {

		this.methodName = methodName;
	} // setMethodName

} // Class ParametersForMethod
