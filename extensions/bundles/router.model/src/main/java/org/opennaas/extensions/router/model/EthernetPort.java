/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Wed Jan 12
 * 09:21:06 CET 2011.
 */

package org.opennaas.extensions.router.model;

import java.io.Serializable;

import javax.xml.bind.annotation.XmlRootElement;

/**
 * This Class contains accessor and mutator methods for all properties defined in the CIM class EthernetPort as well as methods comparable to the
 * invokeMethods defined for this class. This Class implements the EthernetPortBean Interface. The CIM class EthernetPort is described as follows:
 * 
 * Capabilities and management of an EthernetPort.
 */
@XmlRootElement
public class EthernetPort extends NetworkPort implements Serializable {

	/**
	 * 
	 */
	private static final long	serialVersionUID	= 4276011619593987057L;

	public void merge(EthernetPort hashEthernetPort) {
		super.merge(hashEthernetPort);

		/* add for particular params */

	}

	/**
	 * This constructor creates a EthernetPortBeanImpl Class which implements the EthernetPortBean Interface, and encapsulates the CIM class
	 * EthernetPort in a Java Bean. The CIM class EthernetPort is described as follows:
	 * 
	 * Capabilities and management of an EthernetPort.
	 */
	public EthernetPort() {
	};

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property networkAddresses.
	 */
	private String[]	networkAddresses;

	/**
	 * This method returns the EthernetPort.networkAddresses property value. This property is described as follows:
	 * 
	 * Ethernet/802.3 MAC addresses formatted as twelve hexadecimal digits (for example, "010203040506"), with each pair representing one of the six
	 * octets of the MAC address in "canonical" bit order. (Therefore, the Group address bit is found in the low order bit of the first character of
	 * the string.)
	 * 
	 * @return String[] current networkAddresses property value
	 * @exception Exception
	 */
	@Override
	public String[] getNetworkAddresses() {

		return this.networkAddresses;
	} // getNetworkAddresses

	/**
	 * This method sets the EthernetPort.networkAddresses property value. This property is described as follows:
	 * 
	 * Ethernet/802.3 MAC addresses formatted as twelve hexadecimal digits (for example, "010203040506"), with each pair representing one of the six
	 * octets of the MAC address in "canonical" bit order. (Therefore, the Group address bit is found in the low order bit of the first character of
	 * the string.)
	 * 
	 * @param String
	 *            [] new networkAddresses property value
	 * @exception Exception
	 */
	public void setNetworkAddresses(String[] networkAddresses) {

		this.networkAddresses = networkAddresses;
	} // setNetworkAddresses

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property maxDataSize.
	 */
	private long	maxDataSize;

	/**
	 * This method returns the EthernetPort.maxDataSize property value. This property is described as follows:
	 * 
	 * The maximum size of the INFO (non-MAC) field that will be received or transmitted.
	 * 
	 * @return long current maxDataSize property value
	 * @exception Exception
	 */
	public long getMaxDataSize() {

		return this.maxDataSize;
	} // getMaxDataSize

	/**
	 * This method sets the EthernetPort.maxDataSize property value. This property is described as follows:
	 * 
	 * The maximum size of the INFO (non-MAC) field that will be received or transmitted.
	 * 
	 * @param long new maxDataSize property value
	 * @exception Exception
	 */
	public void setMaxDataSize(long maxDataSize) {

		this.maxDataSize = maxDataSize;
	} // setMaxDataSize

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property Capabilities.
	 */

	public enum Capabilities {
		UNKNOWN,
		OTHER,
		ALERTONLAN,
		WAKEONLAN,
		FAILOVER,
		LOADBALANCING
	}

	private Capabilities	capabilities;

	/**
	 * This method returns the EthernetPort.capabilities property value. This property is described as follows:
	 * 
	 * Capabilities of the EthernetPort. For example, the Device might support AlertOnLan, WakeOnLan, Load Balancing, or FailOver. If failover or load
	 * balancing capabilities are listed, a SpareGroup (failover) or ExtraCapacityGroup (load balancing) should also be defined to completely describe
	 * the capability.
	 * 
	 * @return int current capabilities property value
	 * @exception Exception
	 */
	public Capabilities getCapabilities() {

		return this.capabilities;
	} // getCapabilities

	/**
	 * This method sets the EthernetPort.capabilities property value. This property is described as follows:
	 * 
	 * Capabilities of the EthernetPort. For example, the Device might support AlertOnLan, WakeOnLan, Load Balancing, or FailOver. If failover or load
	 * balancing capabilities are listed, a SpareGroup (failover) or ExtraCapacityGroup (load balancing) should also be defined to completely describe
	 * the capability.
	 * 
	 * @param int new capabilities property value
	 * @exception Exception
	 */
	public void setCapabilities(Capabilities capabilities) {

		this.capabilities = capabilities;
	} // setCapabilities

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property capabilityDescriptions.
	 */
	private String[]	capabilityDescriptions;

	/**
	 * This method returns the EthernetPort.capabilityDescriptions property value. This property is described as follows:
	 * 
	 * An array of free-form strings that provides more detailed explanations for any of the EthernetPort features that are indicated in the
	 * Capabilities array. Note, each entry of this array is related to the entry in the Capabilities array that is located at the same index.
	 * 
	 * @return String[] current capabilityDescriptions property value
	 * @exception Exception
	 */
	public String[] getCapabilityDescriptions() {

		return this.capabilityDescriptions;
	} // getCapabilityDescriptions

	/**
	 * This method sets the EthernetPort.capabilityDescriptions property value. This property is described as follows:
	 * 
	 * An array of free-form strings that provides more detailed explanations for any of the EthernetPort features that are indicated in the
	 * Capabilities array. Note, each entry of this array is related to the entry in the Capabilities array that is located at the same index.
	 * 
	 * @param String
	 *            [] new capabilityDescriptions property value
	 * @exception Exception
	 */
	public void setCapabilityDescriptions(String[] capabilityDescriptions) {

		this.capabilityDescriptions = capabilityDescriptions;
	} // setCapabilityDescriptions

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property EnabledCapabilities.
	 */

	public enum EnabledCapabilities {
		UNKNOWN,
		OTHER,
		ALERTONLAN,
		WAKEONLAN,
		FAILOVER,
		LOADBALANCING
	}

	private EnabledCapabilities	enabledCapabilities;

	/**
	 * This method returns the EthernetPort.enabledCapabilities property value. This property is described as follows:
	 * 
	 * Specifies which capabilities are enabled from the list of all supported ones, which are defined in the Capabilities array.
	 * 
	 * @return int current enabledCapabilities property value
	 * @exception Exception
	 */
	public EnabledCapabilities getEnabledCapabilities() {

		return this.enabledCapabilities;
	} // getEnabledCapabilities

	/**
	 * This method sets the EthernetPort.enabledCapabilities property value. This property is described as follows:
	 * 
	 * Specifies which capabilities are enabled from the list of all supported ones, which are defined in the Capabilities array.
	 * 
	 * @param int new enabledCapabilities property value
	 * @exception Exception
	 */
	public void setEnabledCapabilities(EnabledCapabilities
			enabledCapabilities) {

		this.enabledCapabilities = enabledCapabilities;
	} // setEnabledCapabilities

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property otherEnabledCapabilities.
	 */
	private String[]	otherEnabledCapabilities;

	/**
	 * This method returns the EthernetPort.otherEnabledCapabilities property value. This property is described as follows:
	 * 
	 * An array of free-form strings that provides more detailed explanations for any of the enabled capabilities that are specified as 'Other'.
	 * 
	 * @return String[] current otherEnabledCapabilities property value
	 * @exception Exception
	 */
	public String[] getOtherEnabledCapabilities() {

		return this.otherEnabledCapabilities;
	} // getOtherEnabledCapabilities

	/**
	 * This method sets the EthernetPort.otherEnabledCapabilities property value. This property is described as follows:
	 * 
	 * An array of free-form strings that provides more detailed explanations for any of the enabled capabilities that are specified as 'Other'.
	 * 
	 * @param String
	 *            [] new otherEnabledCapabilities property value
	 * @exception Exception
	 */
	public void setOtherEnabledCapabilities(String[] otherEnabledCapabilities) {

		this.otherEnabledCapabilities = otherEnabledCapabilities;
	} // setOtherEnabledCapabilities

} // Class EthernetPort
