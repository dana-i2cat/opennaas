/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Wed Jan 12
 * 09:21:06 CET 2011.
 */

package org.opennaas.extensions.router.model;

import java.io.*;
import java.lang.Exception;

/**
 * This Class contains accessor and mutator methods for all properties defined in the CIM class ElementCapabilities as well as methods comparable to
 * the invokeMethods defined for this class. This Class implements the ElementCapabilitiesBean Interface. The CIM class ElementCapabilities is
 * described as follows:
 * 
 * ElementCapabilities represents the association between ManagedElements and their Capabilities. Note that the cardinality of the ManagedElement
 * reference is Min(1). This cardinality mandates the instantiation of the ElementCapabilities association for the referenced instance of
 * Capabilities. ElementCapabilities describes the existence requirements and context for the referenced instance of ManagedElement. Specifically, the
 * ManagedElement MUST exist and provides the context for the Capabilities.
 */
public class ElementCapabilities extends Association implements Serializable
{

	/**
	 * This constructor creates a ElementCapabilitiesBeanImpl Class which implements the ElementCapabilitiesBean Interface, and encapsulates the CIM
	 * class ElementCapabilities in a Java Bean. The CIM class ElementCapabilities is described as follows:
	 * 
	 * ElementCapabilities represents the association between ManagedElements and their Capabilities. Note that the cardinality of the ManagedElement
	 * reference is Min(1). This cardinality mandates the instantiation of the ElementCapabilities association for the referenced instance of
	 * Capabilities. ElementCapabilities describes the existence requirements and context for the referenced instance of ManagedElement. Specifically,
	 * the ManagedElement MUST exist and provides the context for the Capabilities.
	 */
	public ElementCapabilities() {
	};

	/**
	 * This method create an Association of the type ElementCapabilities between one ManagedElement object and Capabilities object
	 */
	public static ElementCapabilities link(ManagedElement
			managedElement, Capabilities capabilities) {

		return (ElementCapabilities) Association.link(ElementCapabilities.class, managedElement, capabilities);
	}// link

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property Characteristics.
	 */

	public enum Characteristics {
		DEFAULT,
		CURRENT,
		DMTF_RESERVED,
		VENDOR_SPECIFIC
	}

	private Characteristics	characteristics;

	/**
	 * This method returns the ElementCapabilities.characteristics property value. This property is described as follows:
	 * 
	 * Characteristics provides descriptive information about the Capabilities. when the value 2 "Default" is specified, the associated Capabilities
	 * shall represent the default capabilities of the associated Managed Element when the value 2 "Default" is not specified, the Capabilities
	 * instance may represent the default capabilities of the Managed Element When the value 3 "Current" is specified, the associated Capabilities
	 * shall represent the current capabilities of the associated Managed Element When the value 3 "Current" is not specified, the Capabilities
	 * instance may represent the current capabilities of the Managed Element.
	 * 
	 * @return int current characteristics property value
	 * @exception Exception
	 */
	public Characteristics getCharacteristics() {

		return this.characteristics;
	} // getCharacteristics

	/**
	 * This method sets the ElementCapabilities.characteristics property value. This property is described as follows:
	 * 
	 * Characteristics provides descriptive information about the Capabilities. when the value 2 "Default" is specified, the associated Capabilities
	 * shall represent the default capabilities of the associated Managed Element when the value 2 "Default" is not specified, the Capabilities
	 * instance may represent the default capabilities of the Managed Element When the value 3 "Current" is specified, the associated Capabilities
	 * shall represent the current capabilities of the associated Managed Element When the value 3 "Current" is not specified, the Capabilities
	 * instance may represent the current capabilities of the Managed Element.
	 * 
	 * @param int new characteristics property value
	 * @exception Exception
	 */
	public void setCharacteristics(Characteristics characteristics) {

		this.characteristics = characteristics;
	} // setCharacteristics

} // Class ElementCapabilities
