/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Wed Jan 12
 * 09:21:06 CET 2011.
 */

package org.opennaas.extensions.router.model;

import java.io.*;
import java.lang.Exception;

/**
 * This Class contains accessor and mutator methods for all properties defined in the CIM class ISCSIConnectionSettings as well as methods comparable
 * to the invokeMethods defined for this class. This Class implements the ISCSIConnectionSettingsBean Interface. The CIM class ISCSIConnectionSettings
 * is described as follows:
 * 
 * The settings for the usage of an iSCSI NetworkPortal by an iSCSIProtcolEndpoint. These settings are the starting point for negotiation for
 * connection establishment. If an implmentation supports different connections settings for a NetworkPortal for each iSCSIProtocolEndpoint that is
 * bound to it, an instance of this class will be associated by ElementSettingData to an instance of iSCSIProtocolEndpoint. If an implementation
 * supports the same connection settings for a NetworkPortal for all iSCSIProtocolEndpoints then an instance of this class will be associated by
 * ElementSettingData to an instance of either TCPProtocolEndpoint (When the NetworkPortal is a target) or IPProtocolEndpoint (When the NetworkPortal
 * is an initiator). The properties that reflect the actual outcome of the negotiation are found in the iSCSIConnection class.
 */
public class ISCSIConnectionSettings extends SettingData implements
		Serializable {

	/**
	 * This constructor creates a ISCSIConnectionSettingsBeanImpl Class which implements the ISCSIConnectionSettingsBean Interface, and encapsulates
	 * the CIM class ISCSIConnectionSettings in a Java Bean. The CIM class ISCSIConnectionSettings is described as follows:
	 * 
	 * The settings for the usage of an iSCSI NetworkPortal by an iSCSIProtcolEndpoint. These settings are the starting point for negotiation for
	 * connection establishment. If an implmentation supports different connections settings for a NetworkPortal for each iSCSIProtocolEndpoint that
	 * is bound to it, an instance of this class will be associated by ElementSettingData to an instance of iSCSIProtocolEndpoint. If an
	 * implementation supports the same connection settings for a NetworkPortal for all iSCSIProtocolEndpoints then an instance of this class will be
	 * associated by ElementSettingData to an instance of either TCPProtocolEndpoint (When the NetworkPortal is a target) or IPProtocolEndpoint (When
	 * the NetworkPortal is an initiator). The properties that reflect the actual outcome of the negotiation are found in the iSCSIConnection class.
	 */
	public ISCSIConnectionSettings() {
	};

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property maxReceiveDataSegmentLength.
	 */
	private long	maxReceiveDataSegmentLength;

	/**
	 * This method returns the iSCSIConnectionSettings.maxReceiveDataSegmentLength property value. This property is described as follows:
	 * 
	 * The maximum PDU length this portal can receive. This MAY be constrained by hardware characteristics and individual implementations MAY choose
	 * not to allow this property to be changed.
	 * 
	 * @return long current maxReceiveDataSegmentLength property value
	 * @exception Exception
	 */
	public long getMaxReceiveDataSegmentLength() {

		return this.maxReceiveDataSegmentLength;
	} // getMaxReceiveDataSegmentLength

	/**
	 * This method sets the iSCSIConnectionSettings.maxReceiveDataSegmentLength property value. This property is described as follows:
	 * 
	 * The maximum PDU length this portal can receive. This MAY be constrained by hardware characteristics and individual implementations MAY choose
	 * not to allow this property to be changed.
	 * 
	 * @param long new maxReceiveDataSegmentLength property value
	 * @exception Exception
	 */
	public void setMaxReceiveDataSegmentLength(long
			maxReceiveDataSegmentLength) {

		this.maxReceiveDataSegmentLength = maxReceiveDataSegmentLength;
	} // setMaxReceiveDataSegmentLength

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property PrimaryHeaderDigestMethod.
	 */

	public enum PrimaryHeaderDigestMethod {
		OTHER,
		NO_DIGEST,
		CRC32C
	}

	private PrimaryHeaderDigestMethod	primaryHeaderDigestMethod;

	/**
	 * This method returns the iSCSIConnectionSettings.primaryHeaderDigestMethod property value. This property is described as follows:
	 * 
	 * The preferred header digest for this portal.
	 * 
	 * @return int current primaryHeaderDigestMethod property value
	 * @exception Exception
	 */
	public PrimaryHeaderDigestMethod getPrimaryHeaderDigestMethod() {

		return this.primaryHeaderDigestMethod;
	} // getPrimaryHeaderDigestMethod

	/**
	 * This method sets the iSCSIConnectionSettings.primaryHeaderDigestMethod property value. This property is described as follows:
	 * 
	 * The preferred header digest for this portal.
	 * 
	 * @param int new primaryHeaderDigestMethod property value
	 * @exception Exception
	 */
	public void setPrimaryHeaderDigestMethod(PrimaryHeaderDigestMethod
			primaryHeaderDigestMethod) {

		this.primaryHeaderDigestMethod = primaryHeaderDigestMethod;
	} // setPrimaryHeaderDigestMethod

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property otherPrimaryHeaderDigestMethod.
	 */
	private String	otherPrimaryHeaderDigestMethod;

	/**
	 * This method returns the iSCSIConnectionSettings.otherPrimaryHeaderDigestMethod property value. This property is described as follows:
	 * 
	 * A string describing the preferred Header Digest method when PrimaryHeaderDigestMethod is equal to the value 1, "Other".
	 * 
	 * @return String current otherPrimaryHeaderDigestMethod property value
	 * @exception Exception
	 */
	public String getOtherPrimaryHeaderDigestMethod() {

		return this.otherPrimaryHeaderDigestMethod;
	} // getOtherPrimaryHeaderDigestMethod

	/**
	 * This method sets the iSCSIConnectionSettings.otherPrimaryHeaderDigestMethod property value. This property is described as follows:
	 * 
	 * A string describing the preferred Header Digest method when PrimaryHeaderDigestMethod is equal to the value 1, "Other".
	 * 
	 * @param String
	 *            new otherPrimaryHeaderDigestMethod property value
	 * @exception Exception
	 */
	public void setOtherPrimaryHeaderDigestMethod(String
			otherPrimaryHeaderDigestMethod) {

		this.otherPrimaryHeaderDigestMethod = otherPrimaryHeaderDigestMethod;
	} // setOtherPrimaryHeaderDigestMethod

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property PrimaryDataDigestMethod.
	 */

	public enum PrimaryDataDigestMethod {
		OTHER,
		NO_DIGEST,
		CRC32C
	}

	private PrimaryDataDigestMethod	primaryDataDigestMethod;

	/**
	 * This method returns the iSCSIConnectionSettings.primaryDataDigestMethod property value. This property is described as follows:
	 * 
	 * The preferred data digest method for this portal.
	 * 
	 * @return int current primaryDataDigestMethod property value
	 * @exception Exception
	 */
	public PrimaryDataDigestMethod getPrimaryDataDigestMethod() {

		return this.primaryDataDigestMethod;
	} // getPrimaryDataDigestMethod

	/**
	 * This method sets the iSCSIConnectionSettings.primaryDataDigestMethod property value. This property is described as follows:
	 * 
	 * The preferred data digest method for this portal.
	 * 
	 * @param int new primaryDataDigestMethod property value
	 * @exception Exception
	 */
	public void setPrimaryDataDigestMethod(PrimaryDataDigestMethod
			primaryDataDigestMethod) {

		this.primaryDataDigestMethod = primaryDataDigestMethod;
	} // setPrimaryDataDigestMethod

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property otherPrimaryDataDigestMethod.
	 */
	private String	otherPrimaryDataDigestMethod;

	/**
	 * This method returns the iSCSIConnectionSettings.otherPrimaryDataDigestMethod property value. This property is described as follows:
	 * 
	 * A string describing the preferred Data Digest method when PrimaryDataDigestMethod is equal to the value 1, "Other".
	 * 
	 * @return String current otherPrimaryDataDigestMethod property value
	 * @exception Exception
	 */
	public String getOtherPrimaryDataDigestMethod() {

		return this.otherPrimaryDataDigestMethod;
	} // getOtherPrimaryDataDigestMethod

	/**
	 * This method sets the iSCSIConnectionSettings.otherPrimaryDataDigestMethod property value. This property is described as follows:
	 * 
	 * A string describing the preferred Data Digest method when PrimaryDataDigestMethod is equal to the value 1, "Other".
	 * 
	 * @param String
	 *            new otherPrimaryDataDigestMethod property value
	 * @exception Exception
	 */
	public void setOtherPrimaryDataDigestMethod(String
			otherPrimaryDataDigestMethod) {

		this.otherPrimaryDataDigestMethod = otherPrimaryDataDigestMethod;
	} // setOtherPrimaryDataDigestMethod

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property SecondaryHeaderDigestMethod.
	 */

	public enum SecondaryHeaderDigestMethod {
		OTHER,
		NO_DIGEST,
		CRC32C,
		NO_SECONDARY_PREFERENCE
	}

	private SecondaryHeaderDigestMethod	secondaryHeaderDigestMethod;

	/**
	 * This method returns the iSCSIConnectionSettings.secondaryHeaderDigestMethod property value. This property is described as follows:
	 * 
	 * The secondary header digest preference for this portal.
	 * 
	 * @return int current secondaryHeaderDigestMethod property value
	 * @exception Exception
	 */
	public SecondaryHeaderDigestMethod getSecondaryHeaderDigestMethod() {

		return this.secondaryHeaderDigestMethod;
	} // getSecondaryHeaderDigestMethod

	/**
	 * This method sets the iSCSIConnectionSettings.secondaryHeaderDigestMethod property value. This property is described as follows:
	 * 
	 * The secondary header digest preference for this portal.
	 * 
	 * @param int new secondaryHeaderDigestMethod property value
	 * @exception Exception
	 */
	public void setSecondaryHeaderDigestMethod(SecondaryHeaderDigestMethod
			secondaryHeaderDigestMethod) {

		this.secondaryHeaderDigestMethod = secondaryHeaderDigestMethod;
	} // setSecondaryHeaderDigestMethod

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property otherSecondaryHeaderDigestMethod.
	 */
	private String	otherSecondaryHeaderDigestMethod;

	/**
	 * This method returns the iSCSIConnectionSettings.otherSecondaryHeaderDigestMethod property value. This property is described as follows:
	 * 
	 * A string describing the alternate Header Digest method preference when SecondaryHeaderDigestMethod is equal to the value 1, "Other".
	 * 
	 * @return String current otherSecondaryHeaderDigestMethod property value
	 * @exception Exception
	 */
	public String getOtherSecondaryHeaderDigestMethod() {

		return this.otherSecondaryHeaderDigestMethod;
	} // getOtherSecondaryHeaderDigestMethod

	/**
	 * This method sets the iSCSIConnectionSettings.otherSecondaryHeaderDigestMethod property value. This property is described as follows:
	 * 
	 * A string describing the alternate Header Digest method preference when SecondaryHeaderDigestMethod is equal to the value 1, "Other".
	 * 
	 * @param String
	 *            new otherSecondaryHeaderDigestMethod property value
	 * @exception Exception
	 */
	public void setOtherSecondaryHeaderDigestMethod(String
			otherSecondaryHeaderDigestMethod) {

		this.otherSecondaryHeaderDigestMethod = otherSecondaryHeaderDigestMethod;
	} // setOtherSecondaryHeaderDigestMethod

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property SecondaryDataDigestMethod.
	 */

	public enum SecondaryDataDigestMethod {
		OTHER,
		NO_DIGEST,
		CRC32C,
		NO_SECONDARY_PREFERENCE
	}

	private SecondaryDataDigestMethod	secondaryDataDigestMethod;

	/**
	 * This method returns the iSCSIConnectionSettings.secondaryDataDigestMethod property value. This property is described as follows:
	 * 
	 * The secondary data digest preference for this portal.
	 * 
	 * @return int current secondaryDataDigestMethod property value
	 * @exception Exception
	 */
	public SecondaryDataDigestMethod getSecondaryDataDigestMethod() {

		return this.secondaryDataDigestMethod;
	} // getSecondaryDataDigestMethod

	/**
	 * This method sets the iSCSIConnectionSettings.secondaryDataDigestMethod property value. This property is described as follows:
	 * 
	 * The secondary data digest preference for this portal.
	 * 
	 * @param int new secondaryDataDigestMethod property value
	 * @exception Exception
	 */
	public void setSecondaryDataDigestMethod(SecondaryDataDigestMethod
			secondaryDataDigestMethod) {

		this.secondaryDataDigestMethod = secondaryDataDigestMethod;
	} // setSecondaryDataDigestMethod

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property otherSecondaryDataDigestMethod.
	 */
	private String	otherSecondaryDataDigestMethod;

	/**
	 * This method returns the iSCSIConnectionSettings.otherSecondaryDataDigestMethod property value. This property is described as follows:
	 * 
	 * A string describing the alternate Data Digest method preference when SecondaryDataDigestMethod is equal to the value 1, "Other".
	 * 
	 * @return String current otherSecondaryDataDigestMethod property value
	 * @exception Exception
	 */
	public String getOtherSecondaryDataDigestMethod() {

		return this.otherSecondaryDataDigestMethod;
	} // getOtherSecondaryDataDigestMethod

	/**
	 * This method sets the iSCSIConnectionSettings.otherSecondaryDataDigestMethod property value. This property is described as follows:
	 * 
	 * A string describing the alternate Data Digest method preference when SecondaryDataDigestMethod is equal to the value 1, "Other".
	 * 
	 * @param String
	 *            new otherSecondaryDataDigestMethod property value
	 * @exception Exception
	 */
	public void setOtherSecondaryDataDigestMethod(String
			otherSecondaryDataDigestMethod) {

		this.otherSecondaryDataDigestMethod = otherSecondaryDataDigestMethod;
	} // setOtherSecondaryDataDigestMethod

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property requestingMarkersOnReceive.
	 */
	private boolean	requestingMarkersOnReceive;

	/**
	 * This method returns the iSCSIConnectionSettings.requestingMarkersOnReceive property value. This property is described as follows:
	 * 
	 * This property indicates whether or not this portal will request markers in it's incoming data stream.
	 * 
	 * @return boolean current requestingMarkersOnReceive property value
	 * @exception Exception
	 */
	public boolean isRequestingMarkersOnReceive() {

		return this.requestingMarkersOnReceive;
	} // getRequestingMarkersOnReceive

	/**
	 * This method sets the iSCSIConnectionSettings.requestingMarkersOnReceive property value. This property is described as follows:
	 * 
	 * This property indicates whether or not this portal will request markers in it's incoming data stream.
	 * 
	 * @param boolean new requestingMarkersOnReceive property value
	 * @exception Exception
	 */
	public void setRequestingMarkersOnReceive(boolean
			requestingMarkersOnReceive) {

		this.requestingMarkersOnReceive = requestingMarkersOnReceive;
	} // setRequestingMarkersOnReceive

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property PrimaryAuthenticationMethod.
	 */

	public enum PrimaryAuthenticationMethod {
		NONE,
		NO_AUTHENTICATION,
		SRP,
		CHAP,
		KERBEROS
	}

	private PrimaryAuthenticationMethod	primaryAuthenticationMethod;

	/**
	 * This method returns the iSCSIConnectionSettings.primaryAuthenticationMethod property value. This property is described as follows:
	 * 
	 * The preferred primary authentication method for connections, as communicated during the login phase.
	 * 
	 * @return int current primaryAuthenticationMethod property value
	 * @exception Exception
	 */
	public PrimaryAuthenticationMethod getPrimaryAuthenticationMethod() {

		return this.primaryAuthenticationMethod;
	} // getPrimaryAuthenticationMethod

	/**
	 * This method sets the iSCSIConnectionSettings.primaryAuthenticationMethod property value. This property is described as follows:
	 * 
	 * The preferred primary authentication method for connections, as communicated during the login phase.
	 * 
	 * @param int new primaryAuthenticationMethod property value
	 * @exception Exception
	 */
	public void setPrimaryAuthenticationMethod(PrimaryAuthenticationMethod
			primaryAuthenticationMethod) {

		this.primaryAuthenticationMethod = primaryAuthenticationMethod;
	} // setPrimaryAuthenticationMethod

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property SecondaryAuthenticationMethod.
	 */

	public enum SecondaryAuthenticationMethod {
		NONE,
		NO_AUTHENTICATION,
		SRP,
		CHAP,
		KERBEROS
	}

	private SecondaryAuthenticationMethod	secondaryAuthenticationMethod;

	/**
	 * This method returns the iSCSIConnectionSettings.secondaryAuthenticationMethod property value. This property is described as follows:
	 * 
	 * The preferred secondary authentication method for connections, as communicated during the login phase.
	 * 
	 * @return int current secondaryAuthenticationMethod property value
	 * @exception Exception
	 */
	public SecondaryAuthenticationMethod getSecondaryAuthenticationMethod() {

		return this.secondaryAuthenticationMethod;
	} // getSecondaryAuthenticationMethod

	/**
	 * This method sets the iSCSIConnectionSettings.secondaryAuthenticationMethod property value. This property is described as follows:
	 * 
	 * The preferred secondary authentication method for connections, as communicated during the login phase.
	 * 
	 * @param int new secondaryAuthenticationMethod property value
	 * @exception Exception
	 */
	public void setSecondaryAuthenticationMethod(SecondaryAuthenticationMethod
			secondaryAuthenticationMethod) {

		this.secondaryAuthenticationMethod = secondaryAuthenticationMethod;
	} // setSecondaryAuthenticationMethod

} // Class ISCSIConnectionSettings
