/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Wed Jan 12
 * 09:21:06 CET 2011.
 */

package org.opennaas.extensions.router.model;

import java.io.*;

/**
 * This Class contains accessor and mutator methods for all properties defined in the CIM class HostedForwardingServices as well as methods comparable
 * to the invokeMethods defined for this class. This Class implements the HostedForwardingServicesBean Interface. The CIM class
 * HostedForwardingServices is described as follows:
 * 
 * This is a specialization of CIM_HostedService, which is an association between a Service and the System on which the functionality resides. The
 * class, HostedForwardingServices, is deprecated since it provides no additional semantics over HostedService, and unecessarily restricts the Service
 * to a single ComputerSystem, when the Service could reside in a Network or other higher level System.
 */
@Deprecated
public class HostedForwardingServices extends HostedService implements
		Serializable {

	/**
	 * This constructor creates a HostedForwardingServicesBeanImpl Class which implements the HostedForwardingServicesBean Interface, and encapsulates
	 * the CIM class HostedForwardingServices in a Java Bean. The CIM class HostedForwardingServices is described as follows:
	 * 
	 * This is a specialization of CIM_HostedService, which is an association between a Service and the System on which the functionality resides. The
	 * class, HostedForwardingServices, is deprecated since it provides no additional semantics over HostedService, and unecessarily restricts the
	 * Service to a single ComputerSystem, when the Service could reside in a Network or other higher level System.
	 */
	public HostedForwardingServices() {
	};

	/**
	 * This method create an Association of the type HostedForwardingServices between one ComputerSystem object and ForwardingService object
	 */
	@Deprecated
	public static HostedForwardingServices link(ComputerSystem
			antecedent, ForwardingService dependent) {

		return (HostedForwardingServices) Association.link(HostedForwardingServices.class, antecedent, dependent);
	}// link

} // Class HostedForwardingServices
