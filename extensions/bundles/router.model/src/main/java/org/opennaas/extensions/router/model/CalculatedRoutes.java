/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Wed Jan 12
 * 09:21:06 CET 2011.
 */

package org.opennaas.extensions.router.model;

import java.io.*;

/**
 * This Class contains accessor and mutator methods for all properties defined in the CIM class CalculatedRoutes as well as methods comparable to the
 * invokeMethods defined for this class. This Class implements the CalculatedRoutesBean Interface. The CIM class CalculatedRoutes is described as
 * follows:
 * 
 * This assocation makes explicit the routes that are calculated by a specific RouteCalculationService. Thus, every RouteCalculationService can have
 * its own unique set of calculated routes. The association is not necessary in the model and has been deprecated. An instance of the general
 * ConcreteDependency association can tie a NextHopIPRoute to a RouteCalculationService. In addition, information on how the route was derived is
 * available in NextHopIPRoute's RouteDerivation enumeration.
 */
@Deprecated
public class CalculatedRoutes extends Dependency implements Serializable {

	/**
	 * This constructor creates a CalculatedRoutesBeanImpl Class which implements the CalculatedRoutesBean Interface, and encapsulates the CIM class
	 * CalculatedRoutes in a Java Bean. The CIM class CalculatedRoutes is described as follows:
	 * 
	 * This assocation makes explicit the routes that are calculated by a specific RouteCalculationService. Thus, every RouteCalculationService can
	 * have its own unique set of calculated routes. The association is not necessary in the model and has been deprecated. An instance of the general
	 * ConcreteDependency association can tie a NextHopIPRoute to a RouteCalculationService. In addition, information on how the route was derived is
	 * available in NextHopIPRoute's RouteDerivation enumeration.
	 */
	public CalculatedRoutes() {
	};

	/**
	 * This method create an Association of the type CalculatedRoutes between one RouteCalculationService object and IPRoute object
	 */
	@Deprecated
	public static CalculatedRoutes link(RouteCalculationService
			antecedent, IPRoute dependent) {

		return (CalculatedRoutes) Association.link(CalculatedRoutes.class, antecedent, dependent);
	}// link

} // Class CalculatedRoutes
