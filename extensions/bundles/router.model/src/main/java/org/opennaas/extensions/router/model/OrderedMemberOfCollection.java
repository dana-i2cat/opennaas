/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Wed Jan 12
 * 09:21:06 CET 2011.
 */

package org.opennaas.extensions.router.model;

import java.io.*;
import java.lang.Exception;

/**
 * This Class contains accessor and mutator methods for all properties defined in the CIM class OrderedMemberOfCollection as well as methods
 * comparable to the invokeMethods defined for this class. This Class implements the OrderedMemberOfCollectionBean Interface. The CIM class
 * OrderedMemberOfCollection is described as follows:
 * 
 * CIM_OrderedMemberOfCollection is an aggregation used to establish an ordered membership of ManagedElements in a Collection.
 */
public class OrderedMemberOfCollection extends MemberOfCollection implements
		Serializable {

	/**
	 * This constructor creates a OrderedMemberOfCollectionBeanImpl Class which implements the OrderedMemberOfCollectionBean Interface, and
	 * encapsulates the CIM class OrderedMemberOfCollection in a Java Bean. The CIM class OrderedMemberOfCollection is described as follows:
	 * 
	 * CIM_OrderedMemberOfCollection is an aggregation used to establish an ordered membership of ManagedElements in a Collection.
	 */
	public OrderedMemberOfCollection() {
	};

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property assignedSequence.
	 */
	private long	assignedSequence;

	/**
	 * This method returns the OrderedMemberOfCollection.assignedSequence property value. This property is described as follows:
	 * 
	 * AssignedSequence is an unsigned integer 'n' that indicates the relative position of members within a Collection. When 'n' is a positive
	 * integer, it indicates a place in the sequence of members, with smaller integers indicating earlier positions in the sequence. The special value
	 * '0' indicates 'don't care'. If two or more members have the same non-zero sequence number, then the ordering between those members is
	 * irrelevant, but they must all be ordered at the appropriate place in the overall sequence. A series of examples will make ordering of members
	 * clearer: If all members have the same sequence number, regardless of whether it is '0' or non-zero, any order is acceptable. o The values:
	 * 1:MEMBER A 2:MEMBER B 1:MEMBER C 3:MEMBER D indicate two acceptable orders: A,C,B,D or C,A,B,D, because A and C can be ordered in either
	 * sequence, but only at the '1' position. Note that the non-zero sequence numbers do not need to start with '1', and they do not need to be
	 * consecutive. However, the sequencenumbers must reflect their relative magnitude.
	 * 
	 * @return long current assignedSequence property value
	 * @exception Exception
	 */
	public long getAssignedSequence() {

		return this.assignedSequence;
	} // getAssignedSequence

	/**
	 * This method sets the OrderedMemberOfCollection.assignedSequence property value. This property is described as follows:
	 * 
	 * AssignedSequence is an unsigned integer 'n' that indicates the relative position of members within a Collection. When 'n' is a positive
	 * integer, it indicates a place in the sequence of members, with smaller integers indicating earlier positions in the sequence. The special value
	 * '0' indicates 'don't care'. If two or more members have the same non-zero sequence number, then the ordering between those members is
	 * irrelevant, but they must all be ordered at the appropriate place in the overall sequence. A series of examples will make ordering of members
	 * clearer: If all members have the same sequence number, regardless of whether it is '0' or non-zero, any order is acceptable. o The values:
	 * 1:MEMBER A 2:MEMBER B 1:MEMBER C 3:MEMBER D indicate two acceptable orders: A,C,B,D or C,A,B,D, because A and C can be ordered in either
	 * sequence, but only at the '1' position. Note that the non-zero sequence numbers do not need to start with '1', and they do not need to be
	 * consecutive. However, the sequencenumbers must reflect their relative magnitude.
	 * 
	 * @param long new assignedSequence property value
	 * @exception Exception
	 */
	public void setAssignedSequence(long assignedSequence) {

		this.assignedSequence = assignedSequence;
	} // setAssignedSequence

} // Class OrderedMemberOfCollection
