/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Wed Jan 12
 * 09:21:06 CET 2011.
 */

package org.opennaas.extensions.router.model;

import java.io.*;
import java.lang.Exception;

/**
 * This Class contains accessor and mutator methods for all properties defined in the CIM class Hdr8021Filter as well as methods comparable to the
 * invokeMethods defined for this class. This Class implements the Hdr8021FilterBean Interface. The CIM class Hdr8021Filter is described as follows:
 * 
 * 8021Filter allows 802.1.source and destination MAC addresses, as well as the 802.1 protocol ID, priority, and VLAN identifier fields, to be
 * expressed in a single object to classify and identify traffic.
 */
public class Hdr8021Filter extends FilterEntryBase implements Serializable {

	/**
	 * This constructor creates a Hdr8021FilterBeanImpl Class which implements the Hdr8021FilterBean Interface, and encapsulates the CIM class
	 * Hdr8021Filter in a Java Bean. The CIM class Hdr8021Filter is described as follows:
	 * 
	 * 8021Filter allows 802.1.source and destination MAC addresses, as well as the 802.1 protocol ID, priority, and VLAN identifier fields, to be
	 * expressed in a single object to classify and identify traffic.
	 */
	public Hdr8021Filter() {
	};

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property hdrSrcMACAddr8021.
	 */
	private short[]	hdrSrcMACAddr8021;

	/**
	 * This method returns the Hdr8021Filter.hdrSrcMACAddr8021 property value. This property is described as follows:
	 * 
	 * This property is an OctetString of size 6, representing a 48-bit source MAC address in canonical format. This value is compared to the
	 * SourceAddress field in the MAC header, subject to the mask represented in the 8021HdrSrcMACMask property. If a value for this property is not
	 * provided, then the filter does not consider 8021HdrSrcMACAddr in selecting matching packets, i.e., 8021HdrSrcMACAddr matches for all values.
	 * 
	 * @return short[] current hdrSrcMACAddr8021 property value
	 * @exception Exception
	 */
	public short[] getHdrSrcMACAddr8021() {

		return this.hdrSrcMACAddr8021;
	} // getHdrSrcMACAddr8021

	/**
	 * This method sets the Hdr8021Filter.hdrSrcMACAddr8021 property value. This property is described as follows:
	 * 
	 * This property is an OctetString of size 6, representing a 48-bit source MAC address in canonical format. This value is compared to the
	 * SourceAddress field in the MAC header, subject to the mask represented in the 8021HdrSrcMACMask property. If a value for this property is not
	 * provided, then the filter does not consider 8021HdrSrcMACAddr in selecting matching packets, i.e., 8021HdrSrcMACAddr matches for all values.
	 * 
	 * @param short[] new hdrSrcMACAddr8021 property value
	 * @exception Exception
	 */
	public void setHdrSrcMACAddr8021(short[] hdrSrcMACAddr8021) {

		this.hdrSrcMACAddr8021 = hdrSrcMACAddr8021;
	} // setHdrSrcMACAddr8021

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property hdrSrcMACMask8021.
	 */
	private short[]	hdrSrcMACMask8021;

	/**
	 * This method returns the Hdr8021Filter.hdrSrcMACMask8021 property value. This property is described as follows:
	 * 
	 * This property is an OctetString of size 6, representing a 48-bit mask to be used in comparing the SourceAddress field in the MAC header with
	 * the value represented in the 8021HdrSrcMACAddr property. If a value for this property is not provided, then the filter does not consider
	 * 8021HdrSrcMACMask in selecting matching packets, i.e., the value of 8021HdrSrcMACAddr must match the source MAC address in the packet exactly.
	 * 
	 * @return short[] current hdrSrcMACMask8021 property value
	 * @exception Exception
	 */
	public short[] getHdrSrcMACMask8021() {

		return this.hdrSrcMACMask8021;
	} // getHdrSrcMACMask8021

	/**
	 * This method sets the Hdr8021Filter.hdrSrcMACMask8021 property value. This property is described as follows:
	 * 
	 * This property is an OctetString of size 6, representing a 48-bit mask to be used in comparing the SourceAddress field in the MAC header with
	 * the value represented in the 8021HdrSrcMACAddr property. If a value for this property is not provided, then the filter does not consider
	 * 8021HdrSrcMACMask in selecting matching packets, i.e., the value of 8021HdrSrcMACAddr must match the source MAC address in the packet exactly.
	 * 
	 * @param short[] new hdrSrcMACMask8021 property value
	 * @exception Exception
	 */
	public void setHdrSrcMACMask8021(short[] hdrSrcMACMask8021) {

		this.hdrSrcMACMask8021 = hdrSrcMACMask8021;
	} // setHdrSrcMACMask8021

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property hdrDestMACAddr8021.
	 */
	private short[]	hdrDestMACAddr8021;

	/**
	 * This method returns the Hdr8021Filter.hdrDestMACAddr8021 property value. This property is described as follows:
	 * 
	 * This property is an OctetString of size 6, representing a 48-bit destination MAC address in canonical format. This value is compared to the
	 * DestinationAddress field in the MAC header, subject to the mask represented in the 8021HdrDestMACMask property. If a value for this property is
	 * not provided, then the filter does not consider 8021HdrDestMACAddr in selecting matching packets, i.e., 8021HdrDestMACAddr matches for all
	 * values.
	 * 
	 * @return short[] current hdrDestMACAddr8021 property value
	 * @exception Exception
	 */
	public short[] getHdrDestMACAddr8021() {

		return this.hdrDestMACAddr8021;
	} // getHdrDestMACAddr8021

	/**
	 * This method sets the Hdr8021Filter.hdrDestMACAddr8021 property value. This property is described as follows:
	 * 
	 * This property is an OctetString of size 6, representing a 48-bit destination MAC address in canonical format. This value is compared to the
	 * DestinationAddress field in the MAC header, subject to the mask represented in the 8021HdrDestMACMask property. If a value for this property is
	 * not provided, then the filter does not consider 8021HdrDestMACAddr in selecting matching packets, i.e., 8021HdrDestMACAddr matches for all
	 * values.
	 * 
	 * @param short[] new hdrDestMACAddr8021 property value
	 * @exception Exception
	 */
	public void setHdrDestMACAddr8021(short[] hdrDestMACAddr8021) {

		this.hdrDestMACAddr8021 = hdrDestMACAddr8021;
	} // setHdrDestMACAddr8021

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property hdrDestMACMask8021.
	 */
	private short[]	hdrDestMACMask8021;

	/**
	 * This method returns the Hdr8021Filter.hdrDestMACMask8021 property value. This property is described as follows:
	 * 
	 * This property is an OctetString of size 6, representing a 48-bit mask to be used in comparing the DestinationAddress field in the MAC header
	 * with the value represented in the 8021HdrDestMACAddr property. If a value for this property is not provided, then the filter does not consider
	 * 8021HdrDestMACMask in selecting matching packets, i.e., the value of 8021HdrDestMACAddr must match the destination MAC address in the packet
	 * exactly.
	 * 
	 * @return short[] current hdrDestMACMask8021 property value
	 * @exception Exception
	 */
	public short[] getHdrDestMACMask8021() {

		return this.hdrDestMACMask8021;
	} // getHdrDestMACMask8021

	/**
	 * This method sets the Hdr8021Filter.hdrDestMACMask8021 property value. This property is described as follows:
	 * 
	 * This property is an OctetString of size 6, representing a 48-bit mask to be used in comparing the DestinationAddress field in the MAC header
	 * with the value represented in the 8021HdrDestMACAddr property. If a value for this property is not provided, then the filter does not consider
	 * 8021HdrDestMACMask in selecting matching packets, i.e., the value of 8021HdrDestMACAddr must match the destination MAC address in the packet
	 * exactly.
	 * 
	 * @param short[] new hdrDestMACMask8021 property value
	 * @exception Exception
	 */
	public void setHdrDestMACMask8021(short[] hdrDestMACMask8021) {

		this.hdrDestMACMask8021 = hdrDestMACMask8021;
	} // setHdrDestMACMask8021

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property hdrProtocolID8021.
	 */
	private int	hdrProtocolID8021;

	/**
	 * This method returns the Hdr8021Filter.hdrProtocolID8021 property value. This property is described as follows:
	 * 
	 * This property is a 16-bit unsigned integer, representing an Ethernet protocol type. This value is compared to the Ethernet Type field in the
	 * 802.3 MAC header. If a value for this property is not provided, then the filter does not consider 8021HdrProtocolID in selecting matching
	 * packets, i.e., 8021HdrProtocolID matches for all values.
	 * 
	 * @return int current hdrProtocolID8021 property value
	 * @exception Exception
	 */
	public int getHdrProtocolID8021() {

		return this.hdrProtocolID8021;
	} // getHdrProtocolID8021

	/**
	 * This method sets the Hdr8021Filter.hdrProtocolID8021 property value. This property is described as follows:
	 * 
	 * This property is a 16-bit unsigned integer, representing an Ethernet protocol type. This value is compared to the Ethernet Type field in the
	 * 802.3 MAC header. If a value for this property is not provided, then the filter does not consider 8021HdrProtocolID in selecting matching
	 * packets, i.e., 8021HdrProtocolID matches for all values.
	 * 
	 * @param int new hdrProtocolID8021 property value
	 * @exception Exception
	 */
	public void setHdrProtocolID8021(int hdrProtocolID8021) {

		this.hdrProtocolID8021 = hdrProtocolID8021;
	} // setHdrProtocolID8021

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property hdrPriorityValue8021.
	 */
	private short	hdrPriorityValue8021;

	/**
	 * This method returns the Hdr8021Filter.hdrPriorityValue8021 property value. This property is described as follows:
	 * 
	 * This property is an 8-bit unsigned integer, representing an 802.1Q priority. This value is compared to the Priority field in the 802.1Q header.
	 * Since the 802.1Q Priority field consists of 3 bits, the values for this property are limited to the range 0..7. If a value for this property is
	 * not provided, then the filter does not consider 8021HdrPriorityValue in selecting matching packets, i.e., 8021HdrPriorityValue matches for all
	 * values.
	 * 
	 * @return short current hdrPriorityValue8021 property value
	 * @exception Exception
	 */
	public short getHdrPriorityValue8021() {

		return this.hdrPriorityValue8021;
	} // getHdrPriorityValue8021

	/**
	 * This method sets the Hdr8021Filter.hdrPriorityValue8021 property value. This property is described as follows:
	 * 
	 * This property is an 8-bit unsigned integer, representing an 802.1Q priority. This value is compared to the Priority field in the 802.1Q header.
	 * Since the 802.1Q Priority field consists of 3 bits, the values for this property are limited to the range 0..7. If a value for this property is
	 * not provided, then the filter does not consider 8021HdrPriorityValue in selecting matching packets, i.e., 8021HdrPriorityValue matches for all
	 * values.
	 * 
	 * @param short new hdrPriorityValue8021 property value
	 * @exception Exception
	 */
	public void setHdrPriorityValue8021(short hdrPriorityValue8021) {

		this.hdrPriorityValue8021 = hdrPriorityValue8021;
	} // setHdrPriorityValue8021

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property hdrVLANID8021.
	 */
	private long	hdrVLANID8021;

	/**
	 * This method returns the Hdr8021Filter.hdrVLANID8021 property value. This property is described as follows:
	 * 
	 * This property is an 32-bit unsigned integer, representing an 802.1Q VLAN Identifier. This value is compared to the VLAN ID field in the 802.1Q
	 * header. Since the 802.1Q VLAN ID field consists of 12 bits, the values for this property are limited to the range 0..4095. If a value for this
	 * property is not provided, then the filter does not consider 8021HdrVLANID in selecting matching packets, i.e., 8021HdrVLANID matches for all
	 * values.
	 * 
	 * @return long current hdrVLANID8021 property value
	 * @exception Exception
	 */
	public long getHdrVLANID8021() {

		return this.hdrVLANID8021;
	} // getHdrVLANID8021

	/**
	 * This method sets the Hdr8021Filter.hdrVLANID8021 property value. This property is described as follows:
	 * 
	 * This property is an 32-bit unsigned integer, representing an 802.1Q VLAN Identifier. This value is compared to the VLAN ID field in the 802.1Q
	 * header. Since the 802.1Q VLAN ID field consists of 12 bits, the values for this property are limited to the range 0..4095. If a value for this
	 * property is not provided, then the filter does not consider 8021HdrVLANID in selecting matching packets, i.e., 8021HdrVLANID matches for all
	 * values.
	 * 
	 * @param long new hdrVLANID8021 property value
	 * @exception Exception
	 */
	public void setHdrVLANID8021(long hdrVLANID8021) {

		this.hdrVLANID8021 = hdrVLANID8021;
	} // setHdrVLANID8021

} // Class Hdr8021Filter
