/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Wed Jan 12
 * 09:21:06 CET 2011.
 */

package org.opennaas.extensions.router.model;

import java.io.Serializable;

/**
 * This Class contains accessor and mutator methods for all properties defined in the CIM class CollectionOfMSEs as well as methods comparable to the
 * invokeMethods defined for this class. This Class implements the CollectionOfMSEsBean Interface. The CIM class CollectionOfMSEs is described as
 * follows:
 * 
 * The CollectionOfMSEs object allows the grouping of Managed SystemElements for various identification purposes and to reduce the complexity of
 * associating Settings and Configurations. It is abstract to require further definition and semantic refinement in subclasses. The CollectionOfMSEs
 * object does not carry any state or status information, but represents only a grouping or 'bag' of Elements. For this reason, it is incorrect to
 * subclass groups that have state or status from CollectionOfMSEs. An example is CIM_Redundancy Group (which is subclassed from LogicalElement).
 * Collections typically aggregate similar ('like') objects,but they are not required to do so. Collections simply identify 'bags' and might represent
 * an optimization. This purpose is especially true with respect to their association to Settings and Configurations. Without Collections, you would
 * need to define individual ElementSetting and ElementConfiguration associations, to tie Settings and Configuration objects to individual
 * ManagedSystemElements. There might be duplication when assigning the same Setting to multiple objects. In addition, using the Collection object
 * allows the determination that the Setting and Configuration associations are indeed the same for the Collection's members. This information would
 * otherwise be obtained by defining the Collection in a proprietary manner, and then querying the ElementSetting and ElementConfiguration
 * associations to determine if the Collection set is completely covered.
 */
public class CollectionOfMSEs extends Collection implements Serializable {

	/**
	 * This constructor creates a CollectionOfMSEsBeanImpl Class which implements the CollectionOfMSEsBean Interface, and encapsulates the CIM class
	 * CollectionOfMSEs in a Java Bean. The CIM class CollectionOfMSEs is described as follows:
	 * 
	 * The CollectionOfMSEs object allows the grouping of Managed SystemElements for various identification purposes and to reduce the complexity of
	 * associating Settings and Configurations. It is abstract to require further definition and semantic refinement in subclasses. The
	 * CollectionOfMSEs object does not carry any state or status information, but represents only a grouping or 'bag' of Elements. For this reason,
	 * it is incorrect to subclass groups that have state or status from CollectionOfMSEs. An example is CIM_Redundancy Group (which is subclassed
	 * from LogicalElement). Collections typically aggregate similar ('like') objects,but they are not required to do so. Collections simply identify
	 * 'bags' and might represent an optimization. This purpose is especially true with respect to their association to Settings and Configurations.
	 * Without Collections, you would need to define individual ElementSetting and ElementConfiguration associations, to tie Settings and
	 * Configuration objects to individual ManagedSystemElements. There might be duplication when assigning the same Setting to multiple objects. In
	 * addition, using the Collection object allows the determination that the Setting and Configuration associations are indeed the same for the
	 * Collection's members. This information would otherwise be obtained by defining the Collection in a proprietary manner, and then querying the
	 * ElementSetting and ElementConfiguration associations to determine if the Collection set is completely covered.
	 */
	protected CollectionOfMSEs() {
	};

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property collectionID.
	 */
	private String	collectionID;

	/**
	 * This method returns the CollectionOfMSEs.collectionID property value. This property is described as follows:
	 * 
	 * The identification of the Collection object. When subclassed, the CollectionID property can be overridden to be a Key property.
	 * 
	 * @return String current collectionID property value
	 * @exception Exception
	 */
	public String getCollectionID() {

		return this.collectionID;
	} // getCollectionID

	/**
	 * This method sets the CollectionOfMSEs.collectionID property value. This property is described as follows:
	 * 
	 * The identification of the Collection object. When subclassed, the CollectionID property can be overridden to be a Key property.
	 * 
	 * @param String
	 *            new collectionID property value
	 * @exception Exception
	 */
	public void setCollectionID(String collectionID) {

		this.collectionID = collectionID;
	} // setCollectionID

} // Class CollectionOfMSEs
