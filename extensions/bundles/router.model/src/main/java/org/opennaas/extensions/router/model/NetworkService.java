/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Wed Jan 12
 * 09:21:06 CET 2011.
 */

package org.opennaas.extensions.router.model;

import java.io.*;
import java.lang.Exception;

/**
 * This Class contains accessor and mutator methods for all properties defined in the CIM class NetworkService as well as methods comparable to the
 * invokeMethods defined for this class. This Class implements the NetworkServiceBean Interface. The CIM class NetworkService is described as follows:
 * 
 * This is an abstract base class, derived from the Service class. It is deprecated in Version 2.7 with the recommendation that the Service class be
 * subclassed instead. Distinguishing between services that modify traffic versus supporting basic communication has not proved useful.
 */
@Deprecated
public class NetworkService extends Service implements Serializable {

	/**
	 * 
	 */
	private static final long	serialVersionUID	= 8099336563706947925L;

	/**
	 * This constructor creates a NetworkServiceBeanImpl Class which implements the NetworkServiceBean Interface, and encapsulates the CIM class
	 * NetworkService in a Java Bean. The CIM class NetworkService is described as follows:
	 * 
	 * This is an abstract base class, derived from the Service class. It is deprecated in Version 2.7 with the recommendation that the Service class
	 * be subclassed instead. Distinguishing between services that modify traffic versus supporting basic communication has not proved useful.
	 */
	protected NetworkService() {
	};

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property keywords.
	 */
	@Deprecated
	private String[]	keywords;

	/**
	 * This method returns the NetworkService.keywords property value. This property is described as follows:
	 * 
	 * This is a free-form array of strings that provide descriptive words and phrases that can be used in queries. To-date, this property has not
	 * been implemented, since it is not standardized. Also, if this was a necessary query construct, then it would be required higher in the
	 * inheritance hierarchy. The latter has not proven necessary. Therefore, the property is deprecated.
	 * 
	 * @return String[] current keywords property value
	 * @exception Exception
	 */
	@Deprecated
	public String[] getKeywords() {

		return this.keywords;
	} // getKeywords

	/**
	 * This method sets the NetworkService.keywords property value. This property is described as follows:
	 * 
	 * This is a free-form array of strings that provide descriptive words and phrases that can be used in queries. To-date, this property has not
	 * been implemented, since it is not standardized. Also, if this was a necessary query construct, then it would be required higher in the
	 * inheritance hierarchy. The latter has not proven necessary. Therefore, the property is deprecated.
	 * 
	 * @param String
	 *            [] new keywords property value
	 * @exception Exception
	 */
	@Deprecated
	public void setKeywords(String[] keywords) {

		this.keywords = keywords;
	} // setKeywords

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property serviceURL.
	 */
	@Deprecated
	private String	serviceURL;

	/**
	 * This method returns the NetworkService.serviceURL property value. This property is described as follows:
	 * 
	 * This is a URL that provides the protocol, network location, and other service-specific information required in order to access the service. It
	 * is deprecated with the recommendation that ServiceAccessURI be instantiated instead. This new class correctly positions the semantics of the
	 * service access, and clarifies the format of the information.
	 * 
	 * @return String current serviceURL property value
	 * @exception Exception
	 */
	@Deprecated
	public String getServiceURL() {

		return this.serviceURL;
	} // getServiceURL

	/**
	 * This method sets the NetworkService.serviceURL property value. This property is described as follows:
	 * 
	 * This is a URL that provides the protocol, network location, and other service-specific information required in order to access the service. It
	 * is deprecated with the recommendation that ServiceAccessURI be instantiated instead. This new class correctly positions the semantics of the
	 * service access, and clarifies the format of the information.
	 * 
	 * @param String
	 *            new serviceURL property value
	 * @exception Exception
	 */
	@Deprecated
	public void setServiceURL(String serviceURL) {

		this.serviceURL = serviceURL;
	} // setServiceURL

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property startupConditions.
	 */
	@Deprecated
	private String[]	startupConditions;

	/**
	 * This method returns the NetworkService.startupConditions property value. This property is described as follows:
	 * 
	 * This is a free-form array of strings that specify any specific pre-conditions that must be met in order for this service to start correctly. It
	 * was expected that subclasses would refine the inherited StartService() method to suit their specific needs. To-date, this refinement has not
	 * been necessary. Also, the property is not very useful, since it is not standardized. If this was a necessary construct, then it would be
	 * required higher in the inheritance hierarchy (on Service). The latter has not proven true. Therefore, the property is deprecated.
	 * 
	 * @return String[] current startupConditions property value
	 * @exception Exception
	 */
	@Deprecated
	public String[] getStartupConditions() {

		return this.startupConditions;
	} // getStartupConditions

	/**
	 * This method sets the NetworkService.startupConditions property value. This property is described as follows:
	 * 
	 * This is a free-form array of strings that specify any specific pre-conditions that must be met in order for this service to start correctly. It
	 * was expected that subclasses would refine the inherited StartService() method to suit their specific needs. To-date, this refinement has not
	 * been necessary. Also, the property is not very useful, since it is not standardized. If this was a necessary construct, then it would be
	 * required higher in the inheritance hierarchy (on Service). The latter has not proven true. Therefore, the property is deprecated.
	 * 
	 * @param String
	 *            [] new startupConditions property value
	 * @exception Exception
	 */
	@Deprecated
	public void setStartupConditions(String[] startupConditions) {

		this.startupConditions = startupConditions;
	} // setStartupConditions

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property startupParameters.
	 */
	@Deprecated
	private String[]	startupParameters;

	/**
	 * This method returns the NetworkService.startupParameters property value. This property is described as follows:
	 * 
	 * This is a free-form array of strings that specify any specific parameters that must be supplied to the StartService() method in order for this
	 * service to start correctly. It was expected that subclasses would refine the inherited StartService() methods to suit their specific needs.
	 * To-date, this refinement has not been necessary. If indeed the method were refined, then its parameters would more formally convey this
	 * information. Therefore, the property is deprecated.
	 * 
	 * @return String[] current startupParameters property value
	 * @exception Exception
	 */
	@Deprecated
	public String[] getStartupParameters() {

		return this.startupParameters;
	} // getStartupParameters

	/**
	 * This method sets the NetworkService.startupParameters property value. This property is described as follows:
	 * 
	 * This is a free-form array of strings that specify any specific parameters that must be supplied to the StartService() method in order for this
	 * service to start correctly. It was expected that subclasses would refine the inherited StartService() methods to suit their specific needs.
	 * To-date, this refinement has not been necessary. If indeed the method were refined, then its parameters would more formally convey this
	 * information. Therefore, the property is deprecated.
	 * 
	 * @param String
	 *            [] new startupParameters property value
	 * @exception Exception
	 */
	@Deprecated
	public void setStartupParameters(String[] startupParameters) {

		this.startupParameters = startupParameters;
	} // setStartupParameters

} // Class NetworkService
