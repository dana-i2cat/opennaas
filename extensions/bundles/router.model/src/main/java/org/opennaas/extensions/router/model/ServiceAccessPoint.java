/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Wed Jan 12
 * 09:21:06 CET 2011.
 */

package org.opennaas.extensions.router.model;

import java.io.Serializable;
import java.util.List;

import javax.xml.bind.annotation.XmlSeeAlso;

/**
 * This Class contains accessor and mutator methods for all properties defined in the CIM class ServiceAccessPoint as well as methods comparable to
 * the invokeMethods defined for this class. This Class implements the ServiceAccessPointBean Interface. The CIM class ServiceAccessPoint is described
 * as follows:
 * 
 * CIM_ServiceAccessPoint represents the ability to utilize or invoke a Service. Access points represent that a Service is made available for other
 * entities to use.
 */
@XmlSeeAlso({
		ProtocolEndpoint.class
})
public class ServiceAccessPoint extends EnabledLogicalElement implements
		Serializable {

	/**
	 * 
	 */
	private static final long	serialVersionUID	= 4477790607710638709L;

	/* BindsTo */
	/**
	 * 
	 * @return list of ProtocolEndpoint associated with this ServiceAccessPoint through BindsTo dependency as antecedent.
	 */
	@SuppressWarnings("unchecked")
	public List<ProtocolEndpoint> getBindedProtocolEndpoints() {
		return (List<ProtocolEndpoint>) this.getFromAssociatedElementsByType(BindsTo.class);
	}

	/**
	 * Binds ep to this ServiceAccessPoint using BindsTo dependency. This is the dependent, and ep is the antecedent.
	 * 
	 * @param ep
	 * @return true if association has been created, false otherwise.
	 */
	public boolean bindServiceAccessPoint(ProtocolEndpoint ep) {
		if (ep == null)
			return false;

		BindsTo.link(ep, this);
		return true;
	}

	/**
	 * Removes BindsTo association between this ServiceAccessPoint and ep, where this is the dependent and ep the antecedent, if any.
	 * 
	 * @param ep
	 * @return true if association has been removed, false otherwise (also if there was no such association).
	 */
	public boolean unbindServiceAccessPoint(ProtocolEndpoint ep) {
		if (ep == null)
			return false;

		Association a = this.getFirstFromAssociationByTypeAndElement(BindsTo.class, ep);
		if (a == null)
			return false;

		a.unlink();
		return true;
	}

	/**
	 * This constructor creates a ServiceAccessPointBeanImpl Class which implements the ServiceAccessPointBean Interface, and encapsulates the CIM
	 * class ServiceAccessPoint in a Java Bean. The CIM class ServiceAccessPoint is described as follows:
	 * 
	 * CIM_ServiceAccessPoint represents the ability to utilize or invoke a Service. Access points represent that a Service is made available for
	 * other entities to use.
	 */
	protected ServiceAccessPoint() {
	};

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property systemCreationClassName.
	 */
	private String	systemCreationClassName;

	/**
	 * This method returns the ServiceAccessPoint.systemCreationClassName property value. This property is described as follows:
	 * 
	 * The CreationClassName of the scoping System.
	 * 
	 * @return String current systemCreationClassName property value
	 * @exception Exception
	 */
	public String getSystemCreationClassName() {

		return this.systemCreationClassName;
	} // getSystemCreationClassName

	/**
	 * This method sets the ServiceAccessPoint.systemCreationClassName property value. This property is described as follows:
	 * 
	 * The CreationClassName of the scoping System.
	 * 
	 * @param String
	 *            new systemCreationClassName property value
	 * @exception Exception
	 */
	public void setSystemCreationClassName(String systemCreationClassName) {

		this.systemCreationClassName = systemCreationClassName;
	} // setSystemCreationClassName

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property systemName.
	 */
	private String	systemName;

	/**
	 * This method returns the ServiceAccessPoint.systemName property value. This property is described as follows:
	 * 
	 * The Name of the scoping System.
	 * 
	 * @return String current systemName property value
	 * @exception Exception
	 */
	public String getSystemName() {

		return this.systemName;
	} // getSystemName

	/**
	 * This method sets the ServiceAccessPoint.systemName property value. This property is described as follows:
	 * 
	 * The Name of the scoping System.
	 * 
	 * @param String
	 *            new systemName property value
	 * @exception Exception
	 */
	public void setSystemName(String systemName) {

		this.systemName = systemName;
	} // setSystemName

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property creationClassName.
	 */
	private String	creationClassName;

	/**
	 * This method returns the ServiceAccessPoint.creationClassName property value. This property is described as follows:
	 * 
	 * CreationClassName indicates the name of the class or the subclass used in the creation of an instance. When used with the other key properties
	 * of this class, this property allows all instances of this class and its subclasses to be uniquely identified.
	 * 
	 * @return String current creationClassName property value
	 * @exception Exception
	 */
	public String getCreationClassName() {

		return this.creationClassName;
	} // getCreationClassName

	/**
	 * This method sets the ServiceAccessPoint.creationClassName property value. This property is described as follows:
	 * 
	 * CreationClassName indicates the name of the class or the subclass used in the creation of an instance. When used with the other key properties
	 * of this class, this property allows all instances of this class and its subclasses to be uniquely identified.
	 * 
	 * @param String
	 *            new creationClassName property value
	 * @exception Exception
	 */
	public void setCreationClassName(String creationClassName) {

		this.creationClassName = creationClassName;
	} // setCreationClassName

	// /**
	// * The following constants are defined for use with the ValueMap/Values
	// * qualified property name.
	// */
	// private String name;
	/**
	 * This method returns the ServiceAccessPoint.name property value. This property is described as follows:
	 * 
	 * The Name property uniquely identifies the ServiceAccessPoint and provides an indication of the functionality that is managed. This
	 * functionality is described in more detail in the Description property of the object.
	 * 
	 * @return String current name property value
	 * @exception Exception
	 */
	@Override
	public String getName() {
		return super.getName();
	} // getName

	/**
	 * This method sets the ServiceAccessPoint.name property value. This property is described as follows:
	 * 
	 * The Name property uniquely identifies the ServiceAccessPoint and provides an indication of the functionality that is managed. This
	 * functionality is described in more detail in the Description property of the object.
	 * 
	 * @param String
	 *            new name property value
	 * @exception Exception
	 */
	@Override
	public void setName(String name) {
		super.setName(name);
	} // setName

} // Class ServiceAccessPoint
