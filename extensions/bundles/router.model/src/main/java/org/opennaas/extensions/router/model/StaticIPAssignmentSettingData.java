/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Wed Jan 12
 * 09:21:06 CET 2011.
 */

package org.opennaas.extensions.router.model;

import java.io.*;
import java.lang.Exception;

/**
 * This Class contains accessor and mutator methods for all properties defined in the CIM class StaticIPAssignmentSettingData as well as methods
 * comparable to the invokeMethods defined for this class. This Class implements the StaticIPAssignmentSettingDataBean Interface. The CIM class
 * StaticIPAssignmentSettingData is described as follows:
 * 
 * CIM_StaticIPAssignmentSettingData defines a basic IP configuration which could be statically assigned to an IPProtocolEndpoint. This class defines
 * a partial configuration. Instances are aggregated into an instance of IPAssignmentSettingData which defines a full configuration.
 */
public class StaticIPAssignmentSettingData extends IPAssignmentSettingData
		implements Serializable {

	/**
	 * This constructor creates a StaticIPAssignmentSettingDataBeanImpl Class which implements the StaticIPAssignmentSettingDataBean Interface, and
	 * encapsulates the CIM class StaticIPAssignmentSettingData in a Java Bean. The CIM class StaticIPAssignmentSettingData is described as follows:
	 * 
	 * CIM_StaticIPAssignmentSettingData defines a basic IP configuration which could be statically assigned to an IPProtocolEndpoint. This class
	 * defines a partial configuration. Instances are aggregated into an instance of IPAssignmentSettingData which defines a full configuration.
	 */
	public StaticIPAssignmentSettingData() {
	};

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property iPv4Address.
	 */
	private String	iPv4Address;

	/**
	 * This method returns the StaticIPAssignmentSettingData.iPv4Address property value. This property is described as follows:
	 * 
	 * The IPv4 address that will be assigned to the ProtocolEndpoint.
	 * 
	 * @return String current iPv4Address property value
	 * @exception Exception
	 */
	public String getIPv4Address() {

		return this.iPv4Address;
	} // getIPv4Address

	/**
	 * This method sets the StaticIPAssignmentSettingData.iPv4Address property value. This property is described as follows:
	 * 
	 * The IPv4 address that will be assigned to the ProtocolEndpoint.
	 * 
	 * @param String
	 *            new iPv4Address property value
	 * @exception Exception
	 */
	public void setIPv4Address(String iPv4Address) {

		this.iPv4Address = iPv4Address;
	} // setIPv4Address

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property subnetMask.
	 */
	private String	subnetMask;

	/**
	 * This method returns the StaticIPAssignmentSettingData.subnetMask property value. This property is described as follows:
	 * 
	 * The subnet mask for the IPv4 address of this ProtocolEndpoint, if one is defined.
	 * 
	 * @return String current subnetMask property value
	 * @exception Exception
	 */
	public String getSubnetMask() {

		return this.subnetMask;
	} // getSubnetMask

	/**
	 * This method sets the StaticIPAssignmentSettingData.subnetMask property value. This property is described as follows:
	 * 
	 * The subnet mask for the IPv4 address of this ProtocolEndpoint, if one is defined.
	 * 
	 * @param String
	 *            new subnetMask property value
	 * @exception Exception
	 */
	public void setSubnetMask(String subnetMask) {

		this.subnetMask = subnetMask;
	} // setSubnetMask

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property gatewayIPv4Address.
	 */
	private String	gatewayIPv4Address;

	/**
	 * This method returns the StaticIPAssignmentSettingData.gatewayIPv4Address property value. This property is described as follows:
	 * 
	 * The IP v4 address of the default gateway.
	 * 
	 * @return String current gatewayIPv4Address property value
	 * @exception Exception
	 */
	public String getGatewayIPv4Address() {

		return this.gatewayIPv4Address;
	} // getGatewayIPv4Address

	/**
	 * This method sets the StaticIPAssignmentSettingData.gatewayIPv4Address property value. This property is described as follows:
	 * 
	 * The IP v4 address of the default gateway.
	 * 
	 * @param String
	 *            new gatewayIPv4Address property value
	 * @exception Exception
	 */
	public void setGatewayIPv4Address(String gatewayIPv4Address) {

		this.gatewayIPv4Address = gatewayIPv4Address;
	} // setGatewayIPv4Address

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property gatewayIPv6Address.
	 */
	private String	gatewayIPv6Address;

	/**
	 * This method returns the StaticIPAssignmentSettingData.gatewayIPv6Address property value. This property is described as follows:
	 * 
	 * GatewayIPv6Address is used to identify the IPv6 address of the Gateway
	 * 
	 * @return String current gatewayIPv6Address property value
	 * @exception Exception
	 */
	public String getGatewayIPv6Address() {

		return this.gatewayIPv6Address;
	} // getGatewayIPv6Address

	/**
	 * This method sets the StaticIPAssignmentSettingData.gatewayIPv6Address property value. This property is described as follows:
	 * 
	 * GatewayIPv6Address is used to identify the IPv6 address of the Gateway
	 * 
	 * @param String
	 *            new gatewayIPv6Address property value
	 * @exception Exception
	 */
	public void setGatewayIPv6Address(String gatewayIPv6Address) {

		this.gatewayIPv6Address = gatewayIPv6Address;
	} // setGatewayIPv6Address

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property iPv6Address.
	 */
	private String	iPv6Address;

	/**
	 * This method returns the StaticIPAssignmentSettingData.iPv6Address property value. This property is described as follows:
	 * 
	 * The IPv6 address that this ProtocolEndpoint represents.
	 * 
	 * @return String current iPv6Address property value
	 * @exception Exception
	 */
	public String getIPv6Address() {

		return this.iPv6Address;
	} // getIPv6Address

	/**
	 * This method sets the StaticIPAssignmentSettingData.iPv6Address property value. This property is described as follows:
	 * 
	 * The IPv6 address that this ProtocolEndpoint represents.
	 * 
	 * @param String
	 *            new iPv6Address property value
	 * @exception Exception
	 */
	public void setIPv6Address(String iPv6Address) {

		this.iPv6Address = iPv6Address;
	} // setIPv6Address

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property IPv6AddressType.
	 */

	public enum IPv6AddressType {
		UNSPECIFIED,
		LOOPBACK,
		MULTICAST,
		LINK_LOCAL_UNICAST,
		GLOBAL_UNICAST,
		EMBEDDED_IPV4_ADDRESS,
		SITE_LOCAL_UNICAST,
		DMTF_RESERVED,
		VENDOR_RESERVED
	}

	private IPv6AddressType	iPv6AddressType;

	/**
	 * This method returns the StaticIPAssignmentSettingData.iPv6AddressType property value. This property is described as follows:
	 * 
	 * IPv6AddressType identifies the type of address found in the IPv6Address property of this class. The values of this property shall be
	 * interpreted according to RFC4291, Section 2.4
	 * 
	 * @return int current iPv6AddressType property value
	 * @exception Exception
	 */
	public IPv6AddressType getIPv6AddressType() {

		return this.iPv6AddressType;
	} // getIPv6AddressType

	/**
	 * This method sets the StaticIPAssignmentSettingData.iPv6AddressType property value. This property is described as follows:
	 * 
	 * IPv6AddressType identifies the type of address found in the IPv6Address property of this class. The values of this property shall be
	 * interpreted according to RFC4291, Section 2.4
	 * 
	 * @param int new iPv6AddressType property value
	 * @exception Exception
	 */
	public void setIPv6AddressType(IPv6AddressType iPv6AddressType) {

		this.iPv6AddressType = iPv6AddressType;
	} // setIPv6AddressType

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property iPv6SubnetPrefixLength.
	 */
	private int	iPv6SubnetPrefixLength;

	/**
	 * This method returns the StaticIPAssignmentSettingData.iPv6SubnetPrefixLength property value. This property is described as follows:
	 * 
	 * IPv6SubnetPrefixLength is used to identify the prefix length of the IPv6Address property that is used to specify a subnet
	 * 
	 * @return int current iPv6SubnetPrefixLength property value
	 * @exception Exception
	 */
	public int getIPv6SubnetPrefixLength() {

		return this.iPv6SubnetPrefixLength;
	} // getIPv6SubnetPrefixLength

	/**
	 * This method sets the StaticIPAssignmentSettingData.iPv6SubnetPrefixLength property value. This property is described as follows:
	 * 
	 * IPv6SubnetPrefixLength is used to identify the prefix length of the IPv6Address property that is used to specify a subnet
	 * 
	 * @param int new iPv6SubnetPrefixLength property value
	 * @exception Exception
	 */
	public void setIPv6SubnetPrefixLength(int iPv6SubnetPrefixLength) {

		this.iPv6SubnetPrefixLength = iPv6SubnetPrefixLength;
	} // setIPv6SubnetPrefixLength

} // Class StaticIPAssignmentSettingData
