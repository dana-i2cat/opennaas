/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Wed Jan 12
 * 09:21:06 CET 2011.
 */

package org.opennaas.extensions.router.model;

import java.io.*;

/**
 * This Class contains accessor and mutator methods for all properties defined in the CIM class ClassifierService as well as methods comparable to the
 * invokeMethods defined for this class. This Class implements the ClassifierServiceBean Interface. The CIM class ClassifierService is described as
 * follows:
 * 
 * ClassifierService represents a logical entity associated with an ingress or egress interface of a device, that takes a single input stream, and
 * sorts it into one or more output streams. The sorting is done by a set of filters that select packets based on the packet contents, or possibly
 * based on other attributes associated with the packet. Each output stream is the result of matching a particular filter. Rather than being linked
 * directly to its filters (instantiated as FilterLists), a classifier is modeled as an aggregation of ClassifierElements. Each of these
 * ClassifierElements is linked to a single FilterList, by the association ClassifierElementUsesFilterList. Note that ClassifierServices are designed
 * to allow hierarchical classification. When hierarchical classification is used, a ClassifierElement may point to another ClassifierService (via the
 * association, NextServiceAfterClassifierElement). When this is true, the ClassifierElement MUST NOT use the ClassifierElementUses FilterList
 * association. A classifier is modeled as a ConditioningService so that it can be aggregated into a QoSService (using the QoSConditioningSubService
 * aggregation), and can use the NextService association to identify the subsequent ConditioningServices for different traffic streams.
 */
public class ClassifierService extends ConditioningService implements
		Serializable {

	/**
	 * This constructor creates a ClassifierServiceBeanImpl Class which implements the ClassifierServiceBean Interface, and encapsulates the CIM class
	 * ClassifierService in a Java Bean. The CIM class ClassifierService is described as follows:
	 * 
	 * ClassifierService represents a logical entity associated with an ingress or egress interface of a device, that takes a single input stream, and
	 * sorts it into one or more output streams. The sorting is done by a set of filters that select packets based on the packet contents, or possibly
	 * based on other attributes associated with the packet. Each output stream is the result of matching a particular filter. Rather than being
	 * linked directly to its filters (instantiated as FilterLists), a classifier is modeled as an aggregation of ClassifierElements. Each of these
	 * ClassifierElements is linked to a single FilterList, by the association ClassifierElementUsesFilterList. Note that ClassifierServices are
	 * designed to allow hierarchical classification. When hierarchical classification is used, a ClassifierElement may point to another
	 * ClassifierService (via the association, NextServiceAfterClassifierElement). When this is true, the ClassifierElement MUST NOT use the
	 * ClassifierElementUses FilterList association. A classifier is modeled as a ConditioningService so that it can be aggregated into a QoSService
	 * (using the QoSConditioningSubService aggregation), and can use the NextService association to identify the subsequent ConditioningServices for
	 * different traffic streams.
	 */
	public ClassifierService() {
	};
} // Class ClassifierService
