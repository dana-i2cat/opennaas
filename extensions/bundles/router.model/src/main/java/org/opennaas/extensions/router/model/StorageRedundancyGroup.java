/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Wed Jan 12
 * 09:21:06 CET 2011.
 */

package org.opennaas.extensions.router.model;

import java.io.*;
import java.lang.Exception;

/**
 * This Class contains accessor and mutator methods for all properties defined in the CIM class StorageRedundancyGroup as well as methods comparable
 * to the invokeMethods defined for this class. This Class implements the StorageRedundancyGroupBean Interface. The CIM class StorageRedundancyGroup
 * is described as follows:
 * 
 * A class derived from RedundancyGroup containing mass storage-related redundancy information. StorageRedundancy Groups are used to protect user
 * data. They act on one or more underlying StorageExtents, associated via ExtentRedundancyComponent and produce one or more protected StorageExtents
 * that are associated to the underlying StorageExtents via ProtectedExtentBasedOn or CompositeExtentBasedOn. StorageRedundancyGroups may overlap.
 * However, the underlying StorageExtents within the overlap should not contain any check data. The use of this class is being deprecated in lieu of
 * using the StorageRedundancySet class.
 */
@Deprecated
public class StorageRedundancyGroup extends RedundancyGroup implements
		Serializable {

	/**
	 * This constructor creates a StorageRedundancyGroupBeanImpl Class which implements the StorageRedundancyGroupBean Interface, and encapsulates the
	 * CIM class StorageRedundancyGroup in a Java Bean. The CIM class StorageRedundancyGroup is described as follows:
	 * 
	 * A class derived from RedundancyGroup containing mass storage-related redundancy information. StorageRedundancy Groups are used to protect user
	 * data. They act on one or more underlying StorageExtents, associated via ExtentRedundancyComponent and produce one or more protected
	 * StorageExtents that are associated to the underlying StorageExtents via ProtectedExtentBasedOn or CompositeExtentBasedOn.
	 * StorageRedundancyGroups may overlap. However, the underlying StorageExtents within the overlap should not contain any check data. The use of
	 * this class is being deprecated in lieu of using the StorageRedundancySet class.
	 */
	public StorageRedundancyGroup() {
	};

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property TypeOfAlgorithm.
	 */
	@Deprecated
	public enum TypeOfAlgorithm {
		NONE,
		OTHER,
		UNKNOWN,
		COPY,
		XOR,
		PPLUSQPLUS,
		S,
		PPLUSSPLUS
	}

	@Deprecated
	private TypeOfAlgorithm	typeOfAlgorithm;

	/**
	 * This method returns the StorageRedundancyGroup.typeOfAlgorithm property value. This property is described as follows:
	 * 
	 * The TypeOfAlgorithm specifies the algorithm used for data redundancy and reconstruction. For example, "P+Q" (value =5) or "P+S" (7) may be
	 * specified. The value of 0, is defined as "None" to indicate that data redundancy is not active. An inactive redundancy should only be
	 * instantiated if data striping or concatenation are active. These are indicated by the IsStriped or IsConcatentated boolean properties of this
	 * RedundancyGroup.
	 * 
	 * @return int current typeOfAlgorithm property value
	 * @exception Exception
	 */
	@Deprecated
	public TypeOfAlgorithm getTypeOfAlgorithm() {

		return this.typeOfAlgorithm;
	} // getTypeOfAlgorithm

	/**
	 * This method sets the StorageRedundancyGroup.typeOfAlgorithm property value. This property is described as follows:
	 * 
	 * The TypeOfAlgorithm specifies the algorithm used for data redundancy and reconstruction. For example, "P+Q" (value =5) or "P+S" (7) may be
	 * specified. The value of 0, is defined as "None" to indicate that data redundancy is not active. An inactive redundancy should only be
	 * instantiated if data striping or concatenation are active. These are indicated by the IsStriped or IsConcatentated boolean properties of this
	 * RedundancyGroup.
	 * 
	 * @param int new typeOfAlgorithm property value
	 * @exception Exception
	 */
	@Deprecated
	public void setTypeOfAlgorithm(TypeOfAlgorithm typeOfAlgorithm) {

		this.typeOfAlgorithm = typeOfAlgorithm;
	} // setTypeOfAlgorithm

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property StorageRedundancy.
	 */
	@Deprecated
	public enum StorageRedundancy {
		NO_ADDITIONAL_STATUS,
		RECONFIG_IN_PROGRESS,
		DATA_LOST,
		NOT_CURRENTLY_CONFIGURED,
		PROTECTED_REBUILD,
		REDUNDANCY_DISABLED,
		UNPROTECTED_REBUILD,
		RECALCULATING,
		VERIFYING
	}

	@Deprecated
	private StorageRedundancy	storageRedundancy;

	/**
	 * This method returns the StorageRedundancyGroup.storageRedundancy property value. This property is described as follows:
	 * 
	 * StorageRedundancy provides additional information on the state of the RedundancyGroup, beyond the RedundancyStatus property. Information like
	 * "Reconfig In Progress" (value =1) or "Redundancy Disabled" can be specified using this property.
	 * 
	 * @return int current storageRedundancy property value
	 * @exception Exception
	 */
	@Deprecated
	public StorageRedundancy getStorageRedundancy() {

		return this.storageRedundancy;
	} // getStorageRedundancy

	/**
	 * This method sets the StorageRedundancyGroup.storageRedundancy property value. This property is described as follows:
	 * 
	 * StorageRedundancy provides additional information on the state of the RedundancyGroup, beyond the RedundancyStatus property. Information like
	 * "Reconfig In Progress" (value =1) or "Redundancy Disabled" can be specified using this property.
	 * 
	 * @param int new storageRedundancy property value
	 * @exception Exception
	 */
	@Deprecated
	public void setStorageRedundancy(StorageRedundancy storageRedundancy) {

		this.storageRedundancy = storageRedundancy;
	} // setStorageRedundancy

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property isStriped.
	 */
	@Deprecated
	private boolean	isStriped;

	/**
	 * This method returns the StorageRedundancyGroup.isStriped property value. This property is described as follows:
	 * 
	 * True indicates that the data is striped across the various StorageExtents in the Group.
	 * 
	 * @return boolean current isStriped property value
	 * @exception Exception
	 */
	@Deprecated
	public boolean isIsStriped() {

		return this.isStriped;
	} // getIsStriped

	/**
	 * This method sets the StorageRedundancyGroup.isStriped property value. This property is described as follows:
	 * 
	 * True indicates that the data is striped across the various StorageExtents in the Group.
	 * 
	 * @param boolean new isStriped property value
	 * @exception Exception
	 */
	@Deprecated
	public void setIsStriped(boolean isStriped) {

		this.isStriped = isStriped;
	} // setIsStriped

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property isConcatenated.
	 */
	@Deprecated
	private boolean	isConcatenated;

	/**
	 * This method returns the StorageRedundancyGroup.isConcatenated property value. This property is described as follows:
	 * 
	 * True indicates that the data is concatenated across the various StorageExtents in the Group.
	 * 
	 * @return boolean current isConcatenated property value
	 * @exception Exception
	 */
	@Deprecated
	public boolean isIsConcatenated() {

		return this.isConcatenated;
	} // getIsConcatenated

	/**
	 * This method sets the StorageRedundancyGroup.isConcatenated property value. This property is described as follows:
	 * 
	 * True indicates that the data is concatenated across the various StorageExtents in the Group.
	 * 
	 * @param boolean new isConcatenated property value
	 * @exception Exception
	 */
	@Deprecated
	public void setIsConcatenated(boolean isConcatenated) {

		this.isConcatenated = isConcatenated;
	} // setIsConcatenated

} // Class StorageRedundancyGroup
