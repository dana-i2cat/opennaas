<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0">
	<!-- Build the bootstrapper -->
	<bean id="networkBootstrapperFactory" class="org.opennaas.extensions.network.repository.NetworkBootstrapperFactory"/>
    <bean id="resourceDescriptorRepository"
          class="org.opennaas.core.resources.descriptor.ResourceDescriptorRepository"
          init-method="initializeEntityManager" destroy-method="close">
         <property name="persistenceUnit" value="ResourceCore"/>
    </bean>
	<bean id="networkRepository" class="org.opennaas.extensions.network.repository.NetworkRepository" init-method="init">
		<argument value="network"/>
		<property name="resourceDescriptorRepository" ref="resourceDescriptorRepository"/>
		<property name="resourceBootstrapperFactory" ref="networkBootstrapperFactory"/>
	</bean>
	<!-- Get capability factories from the OSGi registry -->
	<reference-list id="capabilityFactory" interface="org.opennaas.core.resources.capability.ICapabilityFactory" availability="optional">
		<reference-listener ref="networkRepository" bind-method="capabilityFactoryAdded" unbind-method="capabilityFactoryDeleted"/>
	</reference-list>
	<service ref="networkRepository" interface="org.opennaas.core.resources.IResourceRepository">
		<service-properties>
			<entry key="type" value="network"/>
			<entry key="version" value="1.0.0"/>
		</service-properties>
	</service>
	<!-- Forces this bundle to wait for dataSourceResources being published -->
	<reference id="dataSourceResources" interface="javax.sql.DataSource" filter="(osgi.jndi.service.name=jdbc/opennaas-resources)"/>
</blueprint>
