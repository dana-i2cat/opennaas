/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Wed Jan 12
 * 09:21:06 CET 2011.
 */

package org.opennaas.extensions.router.model;

import java.io.*;
import java.lang.Exception;

/**
 * This Class contains accessor and mutator methods for all properties defined in the CIM class DNSGeneralSettingData as well as methods comparable to
 * the invokeMethods defined for this class. This Class implements the DNSGeneralSettingDataBean Interface. The CIM class DNSGeneralSettingData is
 * described as follows:
 * 
 * The DNSGeneralSettingData class represents the system wide configuration options for the DNS client. Therefore, these configuration parameters are
 * scoped to a computer system and are applicable to all of the network interfaces of the scoping system.
 */
public class DNSGeneralSettingData extends IPAssignmentSettingData implements
		Serializable {

	/**
	 * This constructor creates a DNSGeneralSettingDataBeanImpl Class which implements the DNSGeneralSettingDataBean Interface, and encapsulates the
	 * CIM class DNSGeneralSettingData in a Java Bean. The CIM class DNSGeneralSettingData is described as follows:
	 * 
	 * The DNSGeneralSettingData class represents the system wide configuration options for the DNS client. Therefore, these configuration parameters
	 * are scoped to a computer system and are applicable to all of the network interfaces of the scoping system.
	 */
	public DNSGeneralSettingData() {
	};

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property appendPrimarySuffixes.
	 */
	private boolean	appendPrimarySuffixes;

	/**
	 * This method returns the DNSGeneralSettingData.appendPrimarySuffixes property value. This property is described as follows:
	 * 
	 * Whether or not the client should automatically append the primary domain suffix to target names prior to attempting to resolve.
	 * 
	 * @return boolean current appendPrimarySuffixes property value
	 * @exception Exception
	 */
	public boolean isAppendPrimarySuffixes() {

		return this.appendPrimarySuffixes;
	} // getAppendPrimarySuffixes

	/**
	 * This method sets the DNSGeneralSettingData.appendPrimarySuffixes property value. This property is described as follows:
	 * 
	 * Whether or not the client should automatically append the primary domain suffix to target names prior to attempting to resolve.
	 * 
	 * @param boolean new appendPrimarySuffixes property value
	 * @exception Exception
	 */
	public void setAppendPrimarySuffixes(boolean appendPrimarySuffixes) {

		this.appendPrimarySuffixes = appendPrimarySuffixes;
	} // setAppendPrimarySuffixes

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property appendParentSuffixes.
	 */
	private boolean	appendParentSuffixes;

	/**
	 * This method returns the DNSGeneralSettingData.appendParentSuffixes property value. This property is described as follows:
	 * 
	 * Whether or not the client should automatically append the parent domain suffix to target names prior to attempting to resolve.
	 * 
	 * @return boolean current appendParentSuffixes property value
	 * @exception Exception
	 */
	public boolean isAppendParentSuffixes() {

		return this.appendParentSuffixes;
	} // getAppendParentSuffixes

	/**
	 * This method sets the DNSGeneralSettingData.appendParentSuffixes property value. This property is described as follows:
	 * 
	 * Whether or not the client should automatically append the parent domain suffix to target names prior to attempting to resolve.
	 * 
	 * @param boolean new appendParentSuffixes property value
	 * @exception Exception
	 */
	public void setAppendParentSuffixes(boolean appendParentSuffixes) {

		this.appendParentSuffixes = appendParentSuffixes;
	} // setAppendParentSuffixes

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property dNSSuffixesToAppend.
	 */
	private String[]	dNSSuffixesToAppend;

	/**
	 * This method returns the DNSGeneralSettingData.dNSSuffixesToAppend property value. This property is described as follows:
	 * 
	 * DNS suffixes to append when attempting to resolve a hostname.
	 * 
	 * @return String[] current dNSSuffixesToAppend property value
	 * @exception Exception
	 */
	public String[] getDNSSuffixesToAppend() {

		return this.dNSSuffixesToAppend;
	} // getDNSSuffixesToAppend

	/**
	 * This method sets the DNSGeneralSettingData.dNSSuffixesToAppend property value. This property is described as follows:
	 * 
	 * DNS suffixes to append when attempting to resolve a hostname.
	 * 
	 * @param String
	 *            [] new dNSSuffixesToAppend property value
	 * @exception Exception
	 */
	public void setDNSSuffixesToAppend(String[] dNSSuffixesToAppend) {

		this.dNSSuffixesToAppend = dNSSuffixesToAppend;
	} // setDNSSuffixesToAppend

} // Class DNSGeneralSettingData
