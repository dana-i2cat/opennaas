/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Wed Jan 12
 * 09:21:06 CET 2011.
 */

package org.opennaas.extensions.router.model;

import java.io.*;
import java.lang.Exception;

/**
 * This Class contains accessor and mutator methods for all properties defined in the CIM class SwitchPortSpanningTree as well as methods comparable
 * to the invokeMethods defined for this class. This Class implements the SwitchPortSpanningTreeBean Interface. The CIM class SwitchPortSpanningTree
 * is described as follows:
 * 
 * A switch participating in the spanning tree maintains spanning-tree specific information about each port whose forwarding is determined by the
 * spanning tree. This association represents that information.
 */
public class SwitchPortSpanningTree extends ServiceSAPDependency implements
		Serializable {

	/**
	 * This constructor creates a SwitchPortSpanningTreeBeanImpl Class which implements the SwitchPortSpanningTreeBean Interface, and encapsulates the
	 * CIM class SwitchPortSpanningTree in a Java Bean. The CIM class SwitchPortSpanningTree is described as follows:
	 * 
	 * A switch participating in the spanning tree maintains spanning-tree specific information about each port whose forwarding is determined by the
	 * spanning tree. This association represents that information.
	 */
	public SwitchPortSpanningTree() {
	};

	/**
	 * This method create an Association of the type SwitchPortSpanningTree between one SwitchPort object and SpanningTreeService object
	 */
	public static SwitchPortSpanningTree link(SwitchPort
			antecedent, SpanningTreeService dependent) {

		return (SwitchPortSpanningTree) Association.link(SwitchPortSpanningTree.class, antecedent, dependent);
	}// link

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property priority.
	 */
	private short	priority;

	/**
	 * This method returns the SwitchPortSpanningTree.priority property value. This property is described as follows:
	 * 
	 * The priority assigned to the port. Contained in the first octet of the two-octet port ID; the other octet is the port number.
	 * 
	 * @return short current priority property value
	 * @exception Exception
	 */
	public short getPriority() {

		return this.priority;
	} // getPriority

	/**
	 * This method sets the SwitchPortSpanningTree.priority property value. This property is described as follows:
	 * 
	 * The priority assigned to the port. Contained in the first octet of the two-octet port ID; the other octet is the port number.
	 * 
	 * @param short new priority property value
	 * @exception Exception
	 */
	public void setPriority(short priority) {

		this.priority = priority;
	} // setPriority

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property State.
	 */

	public enum State {
		DISABLED,
		BLOCKING,
		LISTENING,
		LEARNING,
		FORWARDING,
		BROKEN
	}

	private State	state;

	/**
	 * This method returns the SwitchPortSpanningTree.state property value. This property is described as follows:
	 * 
	 * The current state of the port as determined by the spanning tree protocol.
	 * 
	 * @return int current state property value
	 * @exception Exception
	 */
	public State getState() {

		return this.state;
	} // getState

	/**
	 * This method sets the SwitchPortSpanningTree.state property value. This property is described as follows:
	 * 
	 * The current state of the port as determined by the spanning tree protocol.
	 * 
	 * @param int new state property value
	 * @exception Exception
	 */
	public void setState(State state) {

		this.state = state;
	} // setState

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property Enable.
	 */
	@Deprecated
	public enum Enable {
		ENABLED,
		DISABLED
	}

	@Deprecated
	private Enable	enable;

	/**
	 * This method returns the SwitchPortSpanningTree.enable property value. This property is described as follows:
	 * 
	 * The enabled/disabled status of the port. This property is deprecated since the status of the port is available by inheritance from
	 * EnabledLogicalElement.
	 * 
	 * @return int current enable property value
	 * @exception Exception
	 */
	@Deprecated
	public Enable getEnable() {

		return this.enable;
	} // getEnable

	/**
	 * This method sets the SwitchPortSpanningTree.enable property value. This property is described as follows:
	 * 
	 * The enabled/disabled status of the port. This property is deprecated since the status of the port is available by inheritance from
	 * EnabledLogicalElement.
	 * 
	 * @param int new enable property value
	 * @exception Exception
	 */
	@Deprecated
	public void setEnable(Enable enable) {

		this.enable = enable;
	} // setEnable

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property pathCost.
	 */
	private int	pathCost;

	/**
	 * This method returns the SwitchPortSpanningTree.pathCost property value. This property is described as follows:
	 * 
	 * The contribution of this port to the path cost of paths towards the spanning tree root which include this port.
	 * 
	 * @return int current pathCost property value
	 * @exception Exception
	 */
	public int getPathCost() {

		return this.pathCost;
	} // getPathCost

	/**
	 * This method sets the SwitchPortSpanningTree.pathCost property value. This property is described as follows:
	 * 
	 * The contribution of this port to the path cost of paths towards the spanning tree root which include this port.
	 * 
	 * @param int new pathCost property value
	 * @exception Exception
	 */
	public void setPathCost(int pathCost) {

		this.pathCost = pathCost;
	} // setPathCost

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property designatedRoot.
	 */
	private String	designatedRoot;

	/**
	 * This method returns the SwitchPortSpanningTree.designatedRoot property value. This property is described as follows:
	 * 
	 * The bridge identifier of the root bridge for the segment to which the port is attached, as transmitted by the designated bridge for the
	 * segment.
	 * 
	 * @return String current designatedRoot property value
	 * @exception Exception
	 */
	public String getDesignatedRoot() {

		return this.designatedRoot;
	} // getDesignatedRoot

	/**
	 * This method sets the SwitchPortSpanningTree.designatedRoot property value. This property is described as follows:
	 * 
	 * The bridge identifier of the root bridge for the segment to which the port is attached, as transmitted by the designated bridge for the
	 * segment.
	 * 
	 * @param String
	 *            new designatedRoot property value
	 * @exception Exception
	 */
	public void setDesignatedRoot(String designatedRoot) {

		this.designatedRoot = designatedRoot;
	} // setDesignatedRoot

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property designatedCost.
	 */
	private int	designatedCost;

	/**
	 * This method returns the SwitchPortSpanningTree.designatedCost property value. This property is described as follows:
	 * 
	 * The cost of the path to the root offered by the designated bridge for the segment.
	 * 
	 * @return int current designatedCost property value
	 * @exception Exception
	 */
	public int getDesignatedCost() {

		return this.designatedCost;
	} // getDesignatedCost

	/**
	 * This method sets the SwitchPortSpanningTree.designatedCost property value. This property is described as follows:
	 * 
	 * The cost of the path to the root offered by the designated bridge for the segment.
	 * 
	 * @param int new designatedCost property value
	 * @exception Exception
	 */
	public void setDesignatedCost(int designatedCost) {

		this.designatedCost = designatedCost;
	} // setDesignatedCost

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property designatedBridge.
	 */
	private String	designatedBridge;

	/**
	 * This method returns the SwitchPortSpanningTree.designatedBridge property value. This property is described as follows:
	 * 
	 * The bridge identifier of the designated bridge for the segment to which the port is attached.
	 * 
	 * @return String current designatedBridge property value
	 * @exception Exception
	 */
	public String getDesignatedBridge() {

		return this.designatedBridge;
	} // getDesignatedBridge

	/**
	 * This method sets the SwitchPortSpanningTree.designatedBridge property value. This property is described as follows:
	 * 
	 * The bridge identifier of the designated bridge for the segment to which the port is attached.
	 * 
	 * @param String
	 *            new designatedBridge property value
	 * @exception Exception
	 */
	public void setDesignatedBridge(String designatedBridge) {

		this.designatedBridge = designatedBridge;
	} // setDesignatedBridge

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property designatedPort.
	 */
	private int	designatedPort;

	/**
	 * This method returns the SwitchPortSpanningTree.designatedPort property value. This property is described as follows:
	 * 
	 * The port identifier of the port on the designated bridge serving the segment to which the port is attached.
	 * 
	 * @return int current designatedPort property value
	 * @exception Exception
	 */
	public int getDesignatedPort() {

		return this.designatedPort;
	} // getDesignatedPort

	/**
	 * This method sets the SwitchPortSpanningTree.designatedPort property value. This property is described as follows:
	 * 
	 * The port identifier of the port on the designated bridge serving the segment to which the port is attached.
	 * 
	 * @param int new designatedPort property value
	 * @exception Exception
	 */
	public void setDesignatedPort(int designatedPort) {

		this.designatedPort = designatedPort;
	} // setDesignatedPort

} // Class SwitchPortSpanningTree
