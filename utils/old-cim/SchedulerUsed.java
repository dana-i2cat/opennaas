/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Wed Jan 12
 * 09:21:06 CET 2011.
 */

package org.opennaas.extensions.router.model;

import java.io.*;

/**
 * This Class contains accessor and mutator methods for all properties defined in the CIM class SchedulerUsed as well as methods comparable to the
 * invokeMethods defined for this class. This Class implements the SchedulerUsedBean Interface. The CIM class SchedulerUsed is described as follows:
 * 
 * In order to remove queued packets, a process or Service (identified as a PacketSchedulingService) runs. This association describes the Dependency
 * of the queue and its QueuingService on a SchedulingService, which empties it. The association is deprecated in lieu of associating Queuing Services
 * to SchedulingElements, and SchedulingElements into SchedulingServices. The latter approach is very flexible regarding the implementations that can
 * be modeled, and removes the need to track individual traffic streams using an artificial model property, TrafficClass.
 */
@Deprecated
public class SchedulerUsed extends ServiceServiceDependency implements
		Serializable {

	/**
	 * This constructor creates a SchedulerUsedBeanImpl Class which implements the SchedulerUsedBean Interface, and encapsulates the CIM class
	 * SchedulerUsed in a Java Bean. The CIM class SchedulerUsed is described as follows:
	 * 
	 * In order to remove queued packets, a process or Service (identified as a PacketSchedulingService) runs. This association describes the
	 * Dependency of the queue and its QueuingService on a SchedulingService, which empties it. The association is deprecated in lieu of associating
	 * Queuing Services to SchedulingElements, and SchedulingElements into SchedulingServices. The latter approach is very flexible regarding the
	 * implementations that can be modeled, and removes the need to track individual traffic streams using an artificial model property, TrafficClass.
	 */
	public SchedulerUsed() {
	};

	/**
	 * This method create an Association of the type SchedulerUsed between one PacketSchedulingService object and QueuingService object
	 */
	@Deprecated
	public static SchedulerUsed link(PacketSchedulingService
			antecedent, QueuingService dependent) {

		return (SchedulerUsed) Association.link(SchedulerUsed.class, antecedent, dependent);
	}// link

} // Class SchedulerUsed
