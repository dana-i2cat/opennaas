/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Wed Jan 12
 * 09:21:06 CET 2011.
 */

package org.opennaas.extensions.router.model;

import java.io.*;
import java.lang.Exception;

/**
 * This Class contains accessor and mutator methods for all properties defined in the CIM class BoundedPrioritySchedulingElement as well as methods
 * comparable to the invokeMethods defined for this class. This Class implements the BoundedPrioritySchedulingElementBean Interface. The CIM class
 * BoundedPrioritySchedulingElement is described as follows:
 * 
 * This class is a subclass of the class PriorityScheduling Element, which is itself derived from the abstract class SchedulingElement. As is the case
 * with all subclasses of SchedulingElement, the input associated with an instance of BoundedPrioritySchedulingElement is of one of two types: either
 * a queue, or another scheduler. BoundedPriority SchedulingElement adds an upper bound (BandwidthBound in kilobits per second) on how much traffic
 * can be handled from an input. This data is specific to that one input. It is needed when bounded strict priority scheduling is performed. Note that
 * this class inherits from its superclass the restriction of the inherited boolean property WorkConserving to TRUE.
 */
public class BoundedPrioritySchedulingElement extends
		PrioritySchedulingElement implements Serializable {

	/**
	 * This constructor creates a BoundedPrioritySchedulingElementBeanImpl Class which implements the BoundedPrioritySchedulingElementBean Interface,
	 * and encapsulates the CIM class BoundedPrioritySchedulingElement in a Java Bean. The CIM class BoundedPrioritySchedulingElement is described as
	 * follows:
	 * 
	 * This class is a subclass of the class PriorityScheduling Element, which is itself derived from the abstract class SchedulingElement. As is the
	 * case with all subclasses of SchedulingElement, the input associated with an instance of BoundedPrioritySchedulingElement is of one of two
	 * types: either a queue, or another scheduler. BoundedPriority SchedulingElement adds an upper bound (BandwidthBound in kilobits per second) on
	 * how much traffic can be handled from an input. This data is specific to that one input. It is needed when bounded strict priority scheduling is
	 * performed. Note that this class inherits from its superclass the restriction of the inherited boolean property WorkConserving to TRUE.
	 */
	public BoundedPrioritySchedulingElement() {
	};

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property workConserving.
	 */
	private boolean	workConserving;

	/**
	 * This method returns the BoundedPrioritySchedulingElement.workConserving property value. This property is described as follows:
	 * 
	 * A boolean property indicating whether the PacketSchedulingService tied to this instance (by the ElementInSchedulingService aggregation) is
	 * treating the queue/input tied to this instance, in a work-conserving manner. The queue/input is indicated by either the QueueToSchedule or
	 * SchedulingServiceToSchedule association. Note that this property is writeable, indicating that an administrator can change the behavior of the
	 * SchedulingElement - but only for those elements that can operate in a non-work conserving mode.
	 * 
	 * @return boolean current workConserving property value
	 * @exception Exception
	 */
	@Override
	public boolean isWorkConserving() {

		return this.workConserving;
	} // getWorkConserving

	/**
	 * This method sets the BoundedPrioritySchedulingElement.workConserving property value. This property is described as follows:
	 * 
	 * A boolean property indicating whether the PacketSchedulingService tied to this instance (by the ElementInSchedulingService aggregation) is
	 * treating the queue/input tied to this instance, in a work-conserving manner. The queue/input is indicated by either the QueueToSchedule or
	 * SchedulingServiceToSchedule association. Note that this property is writeable, indicating that an administrator can change the behavior of the
	 * SchedulingElement - but only for those elements that can operate in a non-work conserving mode.
	 * 
	 * @param boolean new workConserving property value
	 * @exception Exception
	 */
	@Override
	public void setWorkConserving(boolean workConserving) {

		this.workConserving = workConserving;
	} // setWorkConserving

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property bandwidthBound.
	 */
	private long	bandwidthBound;

	/**
	 * This method returns the BoundedPrioritySchedulingElement.bandwidthBound property value. This property is described as follows:
	 * 
	 * A 32-bit unsigned integer that defines the upper limit on the amount of traffic that can be handled from the input (through this
	 * SchedulingElement). This is not a shaped upper bound, since bursts can occur. It is a strict bound, limiting the impact of the input. Units are
	 * kilobits per second.
	 * 
	 * @return long current bandwidthBound property value
	 * @exception Exception
	 */
	public long getBandwidthBound() {

		return this.bandwidthBound;
	} // getBandwidthBound

	/**
	 * This method sets the BoundedPrioritySchedulingElement.bandwidthBound property value. This property is described as follows:
	 * 
	 * A 32-bit unsigned integer that defines the upper limit on the amount of traffic that can be handled from the input (through this
	 * SchedulingElement). This is not a shaped upper bound, since bursts can occur. It is a strict bound, limiting the impact of the input. Units are
	 * kilobits per second.
	 * 
	 * @param long new bandwidthBound property value
	 * @exception Exception
	 */
	public void setBandwidthBound(long bandwidthBound) {

		this.bandwidthBound = bandwidthBound;
	} // setBandwidthBound

} // Class BoundedPrioritySchedulingElement
