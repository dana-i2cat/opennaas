/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Wed Jan 12
 * 09:21:06 CET 2011.
 */

package org.opennaas.extensions.router.model;

import java.io.*;
import java.lang.Exception;

/**
 * This Class contains accessor and mutator methods for all properties defined in the CIM class SNMPTrapTarget as well as methods comparable to the
 * invokeMethods defined for this class. This Class implements the SNMPTrapTargetBean Interface. The CIM class SNMPTrapTarget is described as follows:
 * 
 * SNMPTrapTarget contains information describing a remote system, to which Informs and Traps are sent. An SNMPService is related via a
 * ServiceSAPDependency association to one or more instances of this class.
 */
public class SNMPTrapTarget extends RemotePort implements Serializable {

	/**
	 * This constructor creates a SNMPTrapTargetBeanImpl Class which implements the SNMPTrapTargetBean Interface, and encapsulates the CIM class
	 * SNMPTrapTarget in a Java Bean. The CIM class SNMPTrapTarget is described as follows:
	 * 
	 * SNMPTrapTarget contains information describing a remote system, to which Informs and Traps are sent. An SNMPService is related via a
	 * ServiceSAPDependency association to one or more instances of this class.
	 */
	public SNMPTrapTarget() {
	};

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property accessInfo.
	 */
	private String	accessInfo;

	/**
	 * This method returns the SNMPTrapTarget.accessInfo property value. This property is described as follows:
	 * 
	 * The host address.
	 * 
	 * @return String current accessInfo property value
	 * @exception Exception
	 */
	@Override
	public String getAccessInfo() {

		return this.accessInfo;
	} // getAccessInfo

	/**
	 * This method sets the SNMPTrapTarget.accessInfo property value. This property is described as follows:
	 * 
	 * The host address.
	 * 
	 * @param String
	 *            new accessInfo property value
	 * @exception Exception
	 */
	@Override
	public void setAccessInfo(String accessInfo) {

		this.accessInfo = accessInfo;
	} // setAccessInfo

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property portInfo.
	 */
	private String	portInfo;

	/**
	 * This method returns the SNMPTrapTarget.portInfo property value. This property is described as follows:
	 * 
	 * The UDP port number to which the traps/informs are sent. The default is port 162.
	 * 
	 * @return String current portInfo property value
	 * @exception Exception
	 */
	@Override
	public String getPortInfo() {

		return this.portInfo;
	} // getPortInfo

	/**
	 * This method sets the SNMPTrapTarget.portInfo property value. This property is described as follows:
	 * 
	 * The UDP port number to which the traps/informs are sent. The default is port 162.
	 * 
	 * @param String
	 *            new portInfo property value
	 * @exception Exception
	 */
	@Override
	public void setPortInfo(String portInfo) {

		this.portInfo = portInfo;
	} // setPortInfo

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property NotificationMessage.
	 */

	public enum NotificationMessage {
		TRAPS,
		INFORMS
	}

	private NotificationMessage	notificationMessage;

	/**
	 * This method returns the SNMPTrapTarget.notificationMessage property value. This property is described as follows:
	 * 
	 * Allows the selection of the notification message - Traps or Informs. By default, Traps are selected.
	 * 
	 * @return int current notificationMessage property value
	 * @exception Exception
	 */
	public NotificationMessage getNotificationMessage() {

		return this.notificationMessage;
	} // getNotificationMessage

	/**
	 * This method sets the SNMPTrapTarget.notificationMessage property value. This property is described as follows:
	 * 
	 * Allows the selection of the notification message - Traps or Informs. By default, Traps are selected.
	 * 
	 * @param int new notificationMessage property value
	 * @exception Exception
	 */
	public void setNotificationMessage(NotificationMessage
			notificationMessage) {

		this.notificationMessage = notificationMessage;
	} // setNotificationMessage

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property SNMPVersion.
	 */

	public enum SNMPVersion {
		V1,
		V2C,
		V3
	}

	private SNMPVersion	sNMPVersion;

	/**
	 * This method returns the SNMPTrapTarget.sNMPVersion property value. This property is described as follows:
	 * 
	 * The SNMP version used to send the traps or informs. Note that v1 does not support informs.
	 * 
	 * @return int current sNMPVersion property value
	 * @exception Exception
	 */
	public SNMPVersion getSNMPVersion() {

		return this.sNMPVersion;
	} // getSNMPVersion

	/**
	 * This method sets the SNMPTrapTarget.sNMPVersion property value. This property is described as follows:
	 * 
	 * The SNMP version used to send the traps or informs. Note that v1 does not support informs.
	 * 
	 * @param int new sNMPVersion property value
	 * @exception Exception
	 */
	public void setSNMPVersion(SNMPVersion sNMPVersion) {

		this.sNMPVersion = sNMPVersion;
	} // setSNMPVersion

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property communityString.
	 */
	private String	communityString;

	/**
	 * This method returns the SNMPTrapTarget.communityString property value. This property is described as follows:
	 * 
	 * A community string/password to send with the trap operation.
	 * 
	 * @return String current communityString property value
	 * @exception Exception
	 */
	public String getCommunityString() {

		return this.communityString;
	} // getCommunityString

	/**
	 * This method sets the SNMPTrapTarget.communityString property value. This property is described as follows:
	 * 
	 * A community string/password to send with the trap operation.
	 * 
	 * @param String
	 *            new communityString property value
	 * @exception Exception
	 */
	public void setCommunityString(String communityString) {

		this.communityString = communityString;
	} // setCommunityString

} // Class SNMPTrapTarget
