/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Wed Jan 12
 * 09:21:06 CET 2011.
 */

package org.opennaas.extensions.router.model;

import java.util.*;
import java.io.*;
import java.lang.Exception;

/**
 * This Class contains accessor and mutator methods for all properties defined in the CIM class StatisticalSetting as well as methods comparable to
 * the invokeMethods defined for this class. This Class implements the StatisticalSettingBean Interface. The CIM class StatisticalSetting is described
 * as follows:
 * 
 * CIM_StatisticalSetting is the class for setting the collection criteria of statistical data and/or metrics applicable to one or more
 * ManagedElements.
 */
public class StatisticalSetting extends SettingData implements Serializable
{

	/**
	 * This constructor creates a StatisticalSettingBeanImpl Class which implements the StatisticalSettingBean Interface, and encapsulates the CIM
	 * class StatisticalSetting in a Java Bean. The CIM class StatisticalSetting is described as follows:
	 * 
	 * CIM_StatisticalSetting is the class for setting the collection criteria of statistical data and/or metrics applicable to one or more
	 * ManagedElements.
	 */
	public StatisticalSetting() {
	};

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property startStatisticTime.
	 */
	private Date	startStatisticTime;

	/**
	 * This method returns the StatisticalSetting.startStatisticTime property value. This property is described as follows:
	 * 
	 * The time, relative to managed element where the statistic is to be collected, when the first measurement is to be taken.
	 * 
	 * @return Date current startStatisticTime property value
	 * @exception Exception
	 */
	public Date getStartStatisticTime() {

		return this.startStatisticTime;
	} // getStartStatisticTime

	/**
	 * This method sets the StatisticalSetting.startStatisticTime property value. This property is described as follows:
	 * 
	 * The time, relative to managed element where the statistic is to be collected, when the first measurement is to be taken.
	 * 
	 * @param Date
	 *            new startStatisticTime property value
	 * @exception Exception
	 */
	public void setStartStatisticTime(Date startStatisticTime) {

		this.startStatisticTime = startStatisticTime;
	} // setStartStatisticTime

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property endStatisticTime.
	 */
	private Date	endStatisticTime;

	/**
	 * This method returns the StatisticalSetting.endStatisticTime property value. This property is described as follows:
	 * 
	 * The time, relative to managed element where the statistic is to be collected, when the measurement is to end.
	 * 
	 * @return Date current endStatisticTime property value
	 * @exception Exception
	 */
	public Date getEndStatisticTime() {

		return this.endStatisticTime;
	} // getEndStatisticTime

	/**
	 * This method sets the StatisticalSetting.endStatisticTime property value. This property is described as follows:
	 * 
	 * The time, relative to managed element where the statistic is to be collected, when the measurement is to end.
	 * 
	 * @param Date
	 *            new endStatisticTime property value
	 * @exception Exception
	 */
	public void setEndStatisticTime(Date endStatisticTime) {

		this.endStatisticTime = endStatisticTime;
	} // setEndStatisticTime

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property sampleInterval.
	 */
	private Date	sampleInterval;

	/**
	 * This method returns the StatisticalSetting.sampleInterval property value. This property is described as follows:
	 * 
	 * Some statistics are sampled at consistent time intervals. This property when set indicates the desired minimum time that new statistics should
	 * be polled or calculated.
	 * 
	 * @return Date current sampleInterval property value
	 * @exception Exception
	 */
	public Date getSampleInterval() {

		return this.sampleInterval;
	} // getSampleInterval

	/**
	 * This method sets the StatisticalSetting.sampleInterval property value. This property is described as follows:
	 * 
	 * Some statistics are sampled at consistent time intervals. This property when set indicates the desired minimum time that new statistics should
	 * be polled or calculated.
	 * 
	 * @param Date
	 *            new sampleInterval property value
	 * @exception Exception
	 */
	public void setSampleInterval(Date sampleInterval) {

		this.sampleInterval = sampleInterval;
	} // setSampleInterval

} // Class StatisticalSetting
