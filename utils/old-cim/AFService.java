/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Wed Jan 12
 * 09:21:06 CET 2011.
 */

package org.opennaas.extensions.router.model;

import java.io.*;
import java.lang.Exception;

/**
 * This Class contains accessor and mutator methods for all properties defined in the CIM class AFService as well as methods comparable to the
 * invokeMethods defined for this class. This Class implements the AFServiceBean Interface. The CIM class AFService is described as follows:
 * 
 * This class represents a specialization to the general concept of forwarding network traffic by adding specific semantics that characterize the
 * operation of the Assured Forwarding (AF) Service (RFC2597). This RFC defines four different AF classes to represent four different treatments of
 * traffic (e.g., a different amount of forwarding resources, such as buffer space and bandwidth, are allocated). Within each AF class, IP packets are
 * marked with one of three possible drop precedence values. The drop precedence of a packet determines the relative importance of that packet
 * compared to other packets within the same AF class if congestion occurs. A congested interface will try to avoid dropping packets with a lower drop
 * precedence value by instead discarding packets with a higher drop precedence value. Note that [R2597] defines 12 DSCPs that together represent the
 * AF Per Hop Behavior (PHB) group. Implementations are free to extend this (e.g., add more classes and/or drop precedences). The AFService class is
 * modeled as a specialization of DiffServService, which is in turn a specialization of QoSService. This enables it to be related to higher-level
 * QoSServices, as well as to lower-level conditioning sub-services (e.g., classification, metering, dropping, queuing, and others).
 */
public class AFService extends DiffServService implements Serializable {

	/**
	 * This constructor creates a AFServiceBeanImpl Class which implements the AFServiceBean Interface, and encapsulates the CIM class AFService in a
	 * Java Bean. The CIM class AFService is described as follows:
	 * 
	 * This class represents a specialization to the general concept of forwarding network traffic by adding specific semantics that characterize the
	 * operation of the Assured Forwarding (AF) Service (RFC2597). This RFC defines four different AF classes to represent four different treatments
	 * of traffic (e.g., a different amount of forwarding resources, such as buffer space and bandwidth, are allocated). Within each AF class, IP
	 * packets are marked with one of three possible drop precedence values. The drop precedence of a packet determines the relative importance of
	 * that packet compared to other packets within the same AF class if congestion occurs. A congested interface will try to avoid dropping packets
	 * with a lower drop precedence value by instead discarding packets with a higher drop precedence value. Note that [R2597] defines 12 DSCPs that
	 * together represent the AF Per Hop Behavior (PHB) group. Implementations are free to extend this (e.g., add more classes and/or drop
	 * precedences). The AFService class is modeled as a specialization of DiffServService, which is in turn a specialization of QoSService. This
	 * enables it to be related to higher-level QoSServices, as well as to lower-level conditioning sub-services (e.g., classification, metering,
	 * dropping, queuing, and others).
	 */
	public AFService() {
	};

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property classNumber.
	 */
	private short	classNumber;

	/**
	 * This method returns the AFService.classNumber property value. This property is described as follows:
	 * 
	 * This property is an 8-bit unsigned integer that indicates the number of AF classes that this AF implementation uses. Among the instances
	 * aggregated into AFService (using QoSConditioningSubService), one SHOULD find markers with as many distinct values as is indicated by
	 * ClassNumber.
	 * 
	 * @return short current classNumber property value
	 * @exception Exception
	 */
	public short getClassNumber() {

		return this.classNumber;
	} // getClassNumber

	/**
	 * This method sets the AFService.classNumber property value. This property is described as follows:
	 * 
	 * This property is an 8-bit unsigned integer that indicates the number of AF classes that this AF implementation uses. Among the instances
	 * aggregated into AFService (using QoSConditioningSubService), one SHOULD find markers with as many distinct values as is indicated by
	 * ClassNumber.
	 * 
	 * @param short new classNumber property value
	 * @exception Exception
	 */
	public void setClassNumber(short classNumber) {

		this.classNumber = classNumber;
	} // setClassNumber

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property dropperNumber.
	 */
	private short	dropperNumber;

	/**
	 * This method returns the AFService.dropperNumber property value. This property is described as follows:
	 * 
	 * This property is an 8-bit unsigned integer that indicates the number of drop precedence values that this AF implementation uses. The number of
	 * drop precedence values is the number PER AF CLASS. The corresponding droppers are found in the collection of ConditioningServices aggregated by
	 * QoSConditioningSubService.
	 * 
	 * @return short current dropperNumber property value
	 * @exception Exception
	 */
	public short getDropperNumber() {

		return this.dropperNumber;
	} // getDropperNumber

	/**
	 * This method sets the AFService.dropperNumber property value. This property is described as follows:
	 * 
	 * This property is an 8-bit unsigned integer that indicates the number of drop precedence values that this AF implementation uses. The number of
	 * drop precedence values is the number PER AF CLASS. The corresponding droppers are found in the collection of ConditioningServices aggregated by
	 * QoSConditioningSubService.
	 * 
	 * @param short new dropperNumber property value
	 * @exception Exception
	 */
	public void setDropperNumber(short dropperNumber) {

		this.dropperNumber = dropperNumber;
	} // setDropperNumber

} // Class AFService
