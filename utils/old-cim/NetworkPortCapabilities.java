/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Wed Jan 12
 * 09:21:06 CET 2011.
 */

package org.opennaas.extensions.router.model;

import java.io.*;
import java.lang.Exception;

/**
 * This Class contains accessor and mutator methods for all properties defined in the CIM class NetworkPortCapabilities as well as methods comparable
 * to the invokeMethods defined for this class. This Class implements the NetworkPortCapabilitiesBean Interface. The CIM class NetworkPortCapabilities
 * is described as follows:
 * 
 * NetworkPortCapabilities describes the capabilities supported for properties that are configurable in NetworkPort.
 */
public class NetworkPortCapabilities extends LogicalPortCapabilities
		implements Serializable {

	/**
	 * This constructor creates a NetworkPortCapabilitiesBeanImpl Class which implements the NetworkPortCapabilitiesBean Interface, and encapsulates
	 * the CIM class NetworkPortCapabilities in a Java Bean. The CIM class NetworkPortCapabilities is described as follows:
	 * 
	 * NetworkPortCapabilities describes the capabilities supported for properties that are configurable in NetworkPort.
	 */
	public NetworkPortCapabilities() {
	};

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property speedConfigurable.
	 */
	private boolean	speedConfigurable;

	/**
	 * This method returns the NetworkPortCapabilities.speedConfigurable property value. This property is described as follows:
	 * 
	 * Boolean that indicates whether the Speed can be configured.
	 * 
	 * @return boolean current speedConfigurable property value
	 * @exception Exception
	 */
	public boolean isSpeedConfigurable() {

		return this.speedConfigurable;
	} // getSpeedConfigurable

	/**
	 * This method sets the NetworkPortCapabilities.speedConfigurable property value. This property is described as follows:
	 * 
	 * Boolean that indicates whether the Speed can be configured.
	 * 
	 * @param boolean new speedConfigurable property value
	 * @exception Exception
	 */
	public void setSpeedConfigurable(boolean speedConfigurable) {

		this.speedConfigurable = speedConfigurable;
	} // setSpeedConfigurable

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property portSpeedsSupported.
	 */
	private long[]	portSpeedsSupported;

	/**
	 * This method returns the NetworkPortCapabilities.portSpeedsSupported property value. This property is described as follows:
	 * 
	 * List of supported port speeds that can be configured on NetworkPort.Speed.
	 * 
	 * @return long[] current portSpeedsSupported property value
	 * @exception Exception
	 */
	public long[] getPortSpeedsSupported() {

		return this.portSpeedsSupported;
	} // getPortSpeedsSupported

	/**
	 * This method sets the NetworkPortCapabilities.portSpeedsSupported property value. This property is described as follows:
	 * 
	 * List of supported port speeds that can be configured on NetworkPort.Speed.
	 * 
	 * @param long[] new portSpeedsSupported property value
	 * @exception Exception
	 */
	public void setPortSpeedsSupported(long[] portSpeedsSupported) {

		this.portSpeedsSupported = portSpeedsSupported;
	} // setPortSpeedsSupported

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property networkIDsConfigurable.
	 */
	private boolean	networkIDsConfigurable;

	/**
	 * This method returns the NetworkPortCapabilities.networkIDsConfigurable property value. This property is described as follows:
	 * 
	 * Boolean indicating whether the NetworkPort can be configured to connect to specific Networks.
	 * 
	 * @return boolean current networkIDsConfigurable property value
	 * @exception Exception
	 */
	public boolean isNetworkIDsConfigurable() {

		return this.networkIDsConfigurable;
	} // getNetworkIDsConfigurable

	/**
	 * This method sets the NetworkPortCapabilities.networkIDsConfigurable property value. This property is described as follows:
	 * 
	 * Boolean indicating whether the NetworkPort can be configured to connect to specific Networks.
	 * 
	 * @param boolean new networkIDsConfigurable property value
	 * @exception Exception
	 */
	public void setNetworkIDsConfigurable(boolean networkIDsConfigurable) {

		this.networkIDsConfigurable = networkIDsConfigurable;
	} // setNetworkIDsConfigurable

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property NetworkIDsFormat.
	 */

	public enum NetworkIDsFormat {
		VIRTUAL_FABRIC_ID,
		DMTF_RESERVED,
		VENDOR_RESERVED
	}

	private NetworkIDsFormat	networkIDsFormat;

	/**
	 * This method returns the NetworkPortCapabilities.networkIDsFormat property value. This property is described as follows:
	 * 
	 * The format that is expected to populate the NetworkIds for the associated NetworkPortSettings.list of supported LinkTechnologies of the
	 * NetworkPort is defined in the NetworkPortCapabilities.
	 * 
	 * @return int current networkIDsFormat property value
	 * @exception Exception
	 */
	public NetworkIDsFormat getNetworkIDsFormat() {

		return this.networkIDsFormat;
	} // getNetworkIDsFormat

	/**
	 * This method sets the NetworkPortCapabilities.networkIDsFormat property value. This property is described as follows:
	 * 
	 * The format that is expected to populate the NetworkIds for the associated NetworkPortSettings.list of supported LinkTechnologies of the
	 * NetworkPort is defined in the NetworkPortCapabilities.
	 * 
	 * @param int new networkIDsFormat property value
	 * @exception Exception
	 */
	public void setNetworkIDsFormat(NetworkIDsFormat networkIDsFormat) {

		this.networkIDsFormat = networkIDsFormat;
	} // setNetworkIDsFormat

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property LinkTechnologiesSupported.
	 */

	public enum LinkTechnologiesSupported {
		ETHERNET,
		IB,
		FC,
		FDDI,
		ATM,
		TOKEN_RING,
		FRAME_RELAY,
		INFRARED,
		BLUETOOTH,
		WIRELESS_LAN,
		DMTF_RESERVED
	}

	private LinkTechnologiesSupported	linkTechnologiesSupported;

	/**
	 * This method returns the NetworkPortCapabilities.linkTechnologiesSupported property value. This property is described as follows:
	 * 
	 * List of the LinkTechnologies supported by the the NetworkPort.
	 * 
	 * @return int current linkTechnologiesSupported property value
	 * @exception Exception
	 */
	public LinkTechnologiesSupported getLinkTechnologiesSupported() {

		return this.linkTechnologiesSupported;
	} // getLinkTechnologiesSupported

	/**
	 * This method sets the NetworkPortCapabilities.linkTechnologiesSupported property value. This property is described as follows:
	 * 
	 * List of the LinkTechnologies supported by the the NetworkPort.
	 * 
	 * @param int new linkTechnologiesSupported property value
	 * @exception Exception
	 */
	public void setLinkTechnologiesSupported(LinkTechnologiesSupported
			linkTechnologiesSupported) {

		this.linkTechnologiesSupported = linkTechnologiesSupported;
	} // setLinkTechnologiesSupported

} // Class NetworkPortCapabilities
