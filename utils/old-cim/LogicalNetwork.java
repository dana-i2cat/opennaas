/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Wed Jan 12
 * 09:21:06 CET 2011.
 */

package org.opennaas.extensions.router.model;

import java.io.*;
import java.lang.Exception;

/**
 * This Class contains accessor and mutator methods for all properties defined in the CIM class LogicalNetwork as well as methods comparable to the
 * invokeMethods defined for this class. This Class implements the LogicalNetworkBean Interface. The CIM class LogicalNetwork is described as follows:
 * 
 * A LogicalNetwork groups together a set of ProtocolEndpoints of a given type which are able to communicate with each other directly. It is used for
 * describing the characteristics of the grouping and/or its associated medium. A LogicalNetwork represents the ability to send and/or receive data
 * over a network. This class is deprecated in lieu of ConnectivityCollection. The latter better defines that a LogicalNetwork 'collects'
 * ProtocolEndpoints and other related entities, and is hosted within an AdminDomain.
 */
@Deprecated
public class LogicalNetwork extends CollectionOfMSEs implements Serializable
{

	/**
	 * This constructor creates a LogicalNetworkBeanImpl Class which implements the LogicalNetworkBean Interface, and encapsulates the CIM class
	 * LogicalNetwork in a Java Bean. The CIM class LogicalNetwork is described as follows:
	 * 
	 * A LogicalNetwork groups together a set of ProtocolEndpoints of a given type which are able to communicate with each other directly. It is used
	 * for describing the characteristics of the grouping and/or its associated medium. A LogicalNetwork represents the ability to send and/or receive
	 * data over a network. This class is deprecated in lieu of ConnectivityCollection. The latter better defines that a LogicalNetwork 'collects'
	 * ProtocolEndpoints and other related entities, and is hosted within an AdminDomain.
	 */
	public LogicalNetwork() {
	};

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property systemCreationClassName.
	 */
	@Deprecated
	private String	systemCreationClassName;

	/**
	 * This method returns the LogicalNetwork.systemCreationClassName property value. This property is described as follows:
	 * 
	 * The scoping AdminDomain's CreationClassName.
	 * 
	 * @return String current systemCreationClassName property value
	 * @exception Exception
	 */
	@Deprecated
	public String getSystemCreationClassName() {

		return this.systemCreationClassName;
	} // getSystemCreationClassName

	/**
	 * This method sets the LogicalNetwork.systemCreationClassName property value. This property is described as follows:
	 * 
	 * The scoping AdminDomain's CreationClassName.
	 * 
	 * @param String
	 *            new systemCreationClassName property value
	 * @exception Exception
	 */
	@Deprecated
	public void setSystemCreationClassName(String systemCreationClassName) {

		this.systemCreationClassName = systemCreationClassName;
	} // setSystemCreationClassName

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property systemName.
	 */
	@Deprecated
	private String	systemName;

	/**
	 * This method returns the LogicalNetwork.systemName property value. This property is described as follows:
	 * 
	 * The scoping AdminDomain's Name.
	 * 
	 * @return String current systemName property value
	 * @exception Exception
	 */
	@Deprecated
	public String getSystemName() {

		return this.systemName;
	} // getSystemName

	/**
	 * This method sets the LogicalNetwork.systemName property value. This property is described as follows:
	 * 
	 * The scoping AdminDomain's Name.
	 * 
	 * @param String
	 *            new systemName property value
	 * @exception Exception
	 */
	@Deprecated
	public void setSystemName(String systemName) {

		this.systemName = systemName;
	} // setSystemName

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property creationClassName.
	 */
	@Deprecated
	private String	creationClassName;

	/**
	 * This method returns the LogicalNetwork.creationClassName property value. This property is described as follows:
	 * 
	 * CreationClassName indicates the name of the class or the subclass used in the creation of an instance. When used with the other key properties
	 * of this class, this property allows all instances of this class and its subclasses to be uniquely identified.
	 * 
	 * @return String current creationClassName property value
	 * @exception Exception
	 */
	@Deprecated
	public String getCreationClassName() {

		return this.creationClassName;
	} // getCreationClassName

	/**
	 * This method sets the LogicalNetwork.creationClassName property value. This property is described as follows:
	 * 
	 * CreationClassName indicates the name of the class or the subclass used in the creation of an instance. When used with the other key properties
	 * of this class, this property allows all instances of this class and its subclasses to be uniquely identified.
	 * 
	 * @param String
	 *            new creationClassName property value
	 * @exception Exception
	 */
	@Deprecated
	public void setCreationClassName(String creationClassName) {

		this.creationClassName = creationClassName;
	} // setCreationClassName

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property name.
	 */
	@Deprecated
	private String	name;

	/**
	 * This method returns the LogicalNetwork.name property value. This property is described as follows:
	 * 
	 * The Name property defines the label by which the object is known.
	 * 
	 * @return String current name property value
	 * @exception Exception
	 */
	@Deprecated
	public String getName() {

		return this.name;
	} // getName

	/**
	 * This method sets the LogicalNetwork.name property value. This property is described as follows:
	 * 
	 * The Name property defines the label by which the object is known.
	 * 
	 * @param String
	 *            new name property value
	 * @exception Exception
	 */
	@Deprecated
	public void setName(String name) {

		this.name = name;
	} // setName

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property NetworkType.
	 */
	@Deprecated
	public enum NetworkType {
		UNKNOWN,
		OTHER,
		IPV4,
		IPV6,
		IPX,
		APPLETALK,
		DECNET,
		SNA,
		CONP,
		CLNP,
		VINES,
		XNS,
		ATM,
		FRAME_RELAY,
		ETHERNET,
		TOKENRING,
		FDDI,
		INFINIBAND,
		FIBRE_CHANNEL
	}

	@Deprecated
	private NetworkType	networkType;

	/**
	 * This method returns the LogicalNetwork.networkType property value. This property is described as follows:
	 * 
	 * Type is an enumeration that provides additional information that can be used to help categorize and classify different instances of this class.
	 * Subclasses should ensure that they are of the appropriate type defined in the Type enumeration. That is, the IPSubnet subclass should define
	 * its property as either IPv4 or IPv6, as opposed to, for example, ATM.
	 * 
	 * @return int current networkType property value
	 * @exception Exception
	 */
	@Deprecated
	public NetworkType getNetworkType() {

		return this.networkType;
	} // getNetworkType

	/**
	 * This method sets the LogicalNetwork.networkType property value. This property is described as follows:
	 * 
	 * Type is an enumeration that provides additional information that can be used to help categorize and classify different instances of this class.
	 * Subclasses should ensure that they are of the appropriate type defined in the Type enumeration. That is, the IPSubnet subclass should define
	 * its property as either IPv4 or IPv6, as opposed to, for example, ATM.
	 * 
	 * @param int new networkType property value
	 * @exception Exception
	 */
	@Deprecated
	public void setNetworkType(NetworkType networkType) {

		this.networkType = networkType;
	} // setNetworkType

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property otherTypeDescription.
	 */
	@Deprecated
	private String	otherTypeDescription;

	/**
	 * This method returns the LogicalNetwork.otherTypeDescription property value. This property is described as follows:
	 * 
	 * A string describing the type of protocol that is being run by this LogicalNetwork, when the value of the Type property (or any of its
	 * subclasses) is set to 1 (i.e., "Other"). This property should be set to NULL when the Type property is any value other than 1.
	 * 
	 * @return String current otherTypeDescription property value
	 * @exception Exception
	 */
	@Deprecated
	public String getOtherTypeDescription() {

		return this.otherTypeDescription;
	} // getOtherTypeDescription

	/**
	 * This method sets the LogicalNetwork.otherTypeDescription property value. This property is described as follows:
	 * 
	 * A string describing the type of protocol that is being run by this LogicalNetwork, when the value of the Type property (or any of its
	 * subclasses) is set to 1 (i.e., "Other"). This property should be set to NULL when the Type property is any value other than 1.
	 * 
	 * @param String
	 *            new otherTypeDescription property value
	 * @exception Exception
	 */
	@Deprecated
	public void setOtherTypeDescription(String otherTypeDescription) {

		this.otherTypeDescription = otherTypeDescription;
	} // setOtherTypeDescription

} // Class LogicalNetwork
